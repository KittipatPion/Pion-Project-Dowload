{"version":3,"sources":["components/master/location/PlaceContainerReturn.js"],"names":["fields","key","label","Constant","arrFieldMasterPlaceContainerReturn","_style","width","sorter","filter","PlaceContainerReturn","useState","error","setError","isLoaded","setIsLoaded","errorAPI","setErrorAPI","isLoadingData","setIsLoadingData","isPostingData","setIsPostingData","baseItems","setBaseItems","items","setItems","details","setDetails","isShowAddForm","setIsShowAddForm","isConfirmSave","setIsConfirmSave","isConfirmEdit","setIsConfirmEdit","isConfirmDelete","setIsConfirmDelete","fieldDelete","setFieldDelete","handleChangeUpdateField","type","e","newObj","placeContainerReturnCode","target","value","placeContainerReturnNameEng","placeContainerReturnNameThai","description","isActive","onClickAddData","document","getElementById","fnInsertData","onClickEditData","placeContainerReturnID","placeContainerReturnId","fnUpdateData","onClickDeleteData","fnDeleteData","arrData","Repository","fetchAddPlaceContainerReturnList","then","result","httpCode","window","location","reload","fetchEditPlaceContainerReturnList","index","fetchRemovePlaceContainerReturnList","fnGetDataForEdit","fetchGetPlaceContainerReturnListById","data","useEffect","fetchGetPlaceContainerReturnList","getIsValidForm","formClassName","forms","querySelectorAll","isValid","Array","prototype","slice","call","forEach","form","checkValidity","classList","add","onClickCheckFormAddData","onClickCheckFormEditData","showLoadingData","className","apiLoadingData","variant","size","collapseEditForm","show","includes","dataEditForm","Object","keys","length","noValidate","xs","sm","md","component","Grid","item","boxShadow","style","height","styleHeightField","onChange","maxLength","required","inValidNullMessage","class","onClick","txtFormisActive","color","checked","labelOn","labelOff","btHeaderSize","block","btEditData","btDeleteData","apiTopicFetchError","message","lg","txtMasterPlaceContainerReturn","btAddData","id","btAddSize","btSave","columnFilter","tableFilter","tabletxtSearch","placeholder","tabletxtPlaceholder","itemsPerPageSelect","tabletxtCountPage","itemsPerPage","hover","pagination","scopedSlots","name","manage","shape","keyId","position","indexOf","newDetails","splice","toggleDetails","btCollapseHide","btCollapseShow","centered","closeOnBackdrop","messageDescription","btOK","onClose","closeButton","titleConfirmChangeData","contentConfirmAddData","btCancel","contentConfirmEditData","contentConfirmDeleteData"],"mappings":"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","file":"static/js/101.a18a7b66.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CCollapse,\r\n  CInput,\r\n  CLabel,\r\n  CForm,\r\n  CFormGroup,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n  CInvalidFeedback,\r\n  CInputCheckbox,\r\n  CSpinner,\r\n  CSwitch,\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport Repository from \"../../../repositories/Repository\";\r\nimport Constant from \"../../../helpers/Constant\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport functionController from \"../../../helpers/FunctionController\";\r\n\r\nconst fields = [\r\n  {\r\n    key: \"placeContainerReturnCode\",\r\n    label: `${Constant.arrFieldMasterPlaceContainerReturn[0]}`,\r\n  },\r\n  {\r\n    key: \"placeContainerReturnNameThai\",\r\n    label: `${Constant.arrFieldMasterPlaceContainerReturn[1]}`,\r\n  },\r\n  {\r\n    key: \"placeContainerReturnNameEng\",\r\n    label: `${Constant.arrFieldMasterPlaceContainerReturn[2]}`,\r\n  },\r\n  {\r\n    key: \"description\",\r\n    label: `${Constant.arrFieldMasterPlaceContainerReturn[3]}`,\r\n  },\r\n  {\r\n    key: \"isActive\",\r\n    label: `${Constant.arrFieldMasterPlaceContainerReturn[4]}`,\r\n    _style: { width: \"1%\" },\r\n  },\r\n  {\r\n    key: \"manage\",\r\n    label: \"\",\r\n    _style: { width: \"1%\" },\r\n    sorter: false,\r\n    filter: false,\r\n  },\r\n];\r\n\r\nexport default function PlaceContainerReturn() {\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [errorAPI, setErrorAPI] = useState(false);\r\n  const [isLoadingData, setIsLoadingData] = useState(false);\r\n  const [isPostingData, setIsPostingData] = useState(false);\r\n  const [baseItems, setBaseItems] = useState([]);\r\n  const [items, setItems] = useState([]);\r\n  const [details, setDetails] = useState([]);\r\n  const [isShowAddForm, setIsShowAddForm] = useState(false);\r\n  const [isConfirmSave, setIsConfirmSave] = useState(false);\r\n  const [isConfirmEdit, setIsConfirmEdit] = useState(false);\r\n  const [isConfirmDelete, setIsConfirmDelete] = useState(false);\r\n  const [fieldDelete, setFieldDelete] = useState(null);\r\n\r\n  const pageCode = \"\";\r\n\r\n  const toggleDetails = (index, keyId) => {\r\n    const position = details.indexOf(index);\r\n    let newDetails = details.slice();\r\n    if (position !== -1) {\r\n      newDetails.splice(position, 1);\r\n    } else {\r\n      newDetails = [details, index];\r\n      if (!isLoadingData) {\r\n        fnGetDataForEdit(keyId);\r\n      }\r\n    }\r\n    setDetails(newDetails);\r\n  };\r\n\r\n  const handleChangeAddForm = () => {\r\n    setIsShowAddForm(!isShowAddForm);\r\n  };\r\n\r\n  const handleChangeConfirmDelete = (index) => (e) => {\r\n    setIsConfirmDelete(!isConfirmDelete);\r\n    setFieldDelete(index);\r\n  };\r\n\r\n  const handleChangeUpdateField = (type) => (e) => {\r\n    let newObj = { ...items };\r\n    if (type === \"placeContainerReturnCode\")\r\n      newObj.placeContainerReturnCode = e.target.value;\r\n    else if (type === \"placeContainerReturnNameEng\")\r\n      newObj.placeContainerReturnNameEng = e.target.value;\r\n    else if (type === \"placeContainerReturnNameThai\")\r\n      newObj.placeContainerReturnNameThai = e.target.value;\r\n    else if (type === \"description\")\r\n      newObj.description = e.target.value;\r\n    else if (type === \"isActive\")\r\n      newObj.isActive = !newObj.isActive;\r\n    setItems(newObj);\r\n  };\r\n\r\n  const onClickAddData = () => {\r\n    setIsConfirmSave(!isConfirmSave);\r\n    var placeContainerReturnCode = document.getElementById(\r\n      \"add-placeContainerReturn-code\"\r\n    ).value;\r\n    var placeContainerReturnNameEng =\r\n      document.getElementById(\"add-en-name\").value;\r\n    var placeContainerReturnNameThai =\r\n      document.getElementById(\"add-th-name\").value;\r\n    var description = document.getElementById(\"add-description\").value;\r\n    var isActive = true;\r\n    var createBy = 1;\r\n    var newArr = [\r\n      placeContainerReturnCode,\r\n      placeContainerReturnNameEng,\r\n      placeContainerReturnNameThai,\r\n      description,\r\n      isActive,\r\n      createBy,\r\n    ];\r\n    // console.log(newArr);\r\n    fnInsertData(newArr);\r\n  };\r\n\r\n  const onClickEditData = () => {\r\n    setIsConfirmEdit(!isConfirmEdit);\r\n    var newObj = { ...items };\r\n    var placeContainerReturnID = newObj.placeContainerReturnId;\r\n    var placeContainerReturnCode = newObj.placeContainerReturnCode;\r\n    var placeContainerReturnNameEng = newObj.placeContainerReturnNameEng;\r\n    var placeContainerReturnNameThai = newObj.placeContainerReturnNameThai;\r\n    var description = newObj.description;\r\n    var isActive = newObj.isActive;\r\n    var updateBy = 1;\r\n    var arrObj = [\r\n      placeContainerReturnID,\r\n      placeContainerReturnCode,\r\n      placeContainerReturnNameEng,\r\n      placeContainerReturnNameThai,\r\n      description,\r\n      isActive,\r\n      updateBy,\r\n    ];\r\n    // console.log(arrObj);\r\n    fnUpdateData(arrObj);\r\n  };\r\n\r\n  const onClickDeleteData = () => {\r\n    setIsConfirmDelete(!isConfirmDelete);\r\n    var cyplaceId = fieldDelete;\r\n    // console.log(cyplaceId);\r\n    fnDeleteData(cyplaceId);\r\n  };\r\n\r\n  const fnInsertData = (arrData) => {\r\n    setIsPostingData(true);\r\n    Repository.fetchAddPlaceContainerReturnList(arrData).then(\r\n      (result) => {\r\n        setIsPostingData(false);\r\n        if (result.httpCode === \"200\") {\r\n          window.location.reload(false);\r\n        }\r\n        else {\r\n          setErrorAPI(result);\r\n        }\r\n      },\r\n      (error) => {\r\n        setIsPostingData(false);\r\n        setErrorAPI(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  const fnUpdateData = (arrData) => {\r\n    setIsPostingData(true);\r\n    Repository.fetchEditPlaceContainerReturnList(arrData).then(\r\n      (result) => {\r\n        setIsPostingData(false);\r\n        if (result.httpCode === \"200\") {\r\n          window.location.reload(false);\r\n        }\r\n        else {\r\n          setErrorAPI(result);\r\n        }\r\n      },\r\n      (error) => {\r\n        setIsPostingData(false);\r\n        setErrorAPI(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  const fnDeleteData = (index) => {\r\n    setIsPostingData(true);\r\n    Repository.fetchRemovePlaceContainerReturnList(index).then(\r\n      (result) => {\r\n        setIsPostingData(false);\r\n        if (result.httpCode === \"200\") {\r\n          window.location.reload(false);\r\n        }\r\n        else {\r\n          setErrorAPI(result);\r\n        }\r\n      },\r\n      (error) => {\r\n        setIsPostingData(false);\r\n        setErrorAPI(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  const fnGetDataForEdit = (index) => {\r\n    setIsLoadingData(true);\r\n    setItems({});\r\n    Repository.fetchGetPlaceContainerReturnListById(index).then(\r\n      (result) => {\r\n        setIsLoadingData(false);\r\n        if (result.httpCode === \"200\") {\r\n          setItems(result.data);\r\n        } else {\r\n          setErrorAPI(result);\r\n        }\r\n      },\r\n      (error) => {\r\n        setIsLoadingData(false);\r\n        setErrorAPI(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  const fnCheckUserAuth = () => {\r\n    var result = functionController.getUserAuthenOneRole(pageCode);\r\n    if (result.isAuth) {\r\n      // initeState();\r\n    }\r\n    else {\r\n      setIsLoaded(true);\r\n      setError(Constant.apiMessageUnAuthenToUsePage);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    Repository.fetchGetPlaceContainerReturnList().then(\r\n      (result) => {\r\n        setIsLoaded(true);\r\n        if (result.httpCode === \"200\") {\r\n          setBaseItems(result.data);\r\n        } else {\r\n          setError(result);\r\n        }\r\n      },\r\n      (error) => {\r\n        setIsLoaded(true);\r\n        setError(error);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const getIsValidForm = (formClassName) => {\r\n    var forms = document.querySelectorAll(`.${formClassName}`);\r\n    var isValid = false;\r\n    Array.prototype.slice.call(forms).forEach(function (form) {\r\n      if (form.checkValidity()) {\r\n        isValid = true;\r\n      }\r\n      form.classList.add(\"was-validated\");\r\n    });\r\n    return isValid;\r\n  };\r\n\r\n  const onClickCheckFormAddData = () => {\r\n    if (getIsValidForm(\"add-needs-validation\")) {\r\n      setIsConfirmSave(!isConfirmSave);\r\n    }\r\n  };\r\n\r\n  const onClickCheckFormEditData = () => {\r\n    if (getIsValidForm(\"edit-needs-validation\")) {\r\n      setIsConfirmEdit(!isConfirmEdit);\r\n    }\r\n  };\r\n\r\n  const showLoadingData = () => (\r\n    <CCol className=\"text-center headtext\">\r\n      <CLabel>{Constant.apiLoadingData}</CLabel>{\" \"}\r\n      <CSpinner variant=\"grow\" size=\"md\" />\r\n    </CCol>\r\n  );\r\n\r\n  const collapseAddForm = () => (\r\n    <CCollapse show={isShowAddForm}>\r\n      <CCardBody>\r\n        <CForm className=\"add-needs-validation\" noValidate>\r\n          <Box\r\n            className=\"border-set\"\r\n            component={Grid}\r\n            item\r\n            boxShadow={1}\r\n            xs={{\r\n              width: \" 100%\",\r\n            }}\r\n          >\r\n            <CCard className=\"p-3\">\r\n              <CRow>\r\n                <CCol xs=\"12\" sm=\"6\" md=\"3\">\r\n                  <CFormGroup>\r\n                    <CLabel>\r\n                      {Constant.arrFieldMasterPlaceContainerReturn[0]}\r\n                    </CLabel>\r\n                    <Box\r\n                      className=\"border-set\"\r\n                      component={Grid}\r\n                      item\r\n                      boxShadow={1}\r\n                      xs={{\r\n                        width: \" 100%\",\r\n                      }}\r\n                    >\r\n                      <CInput\r\n                        type=\"text\"\r\n                        style={{ height: Constant.styleHeightField }}\r\n                        id=\"add-placeContainerReturn-code\"\r\n                        maxLength=\"15\"\r\n                        required\r\n                      />\r\n                    </Box>\r\n                    <CInvalidFeedback>\r\n                      {Constant.inValidNullMessage}\r\n                    </CInvalidFeedback>\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" sm=\"6\" md=\"3\">\r\n                  <CFormGroup>\r\n                    <CLabel>\r\n                      {Constant.arrFieldMasterPlaceContainerReturn[1]}\r\n                    </CLabel>\r\n                    <Box\r\n                      className=\"border-set\"\r\n                      component={Grid}\r\n                      item\r\n                      boxShadow={1}\r\n                      xs={{\r\n                        width: \" 100%\",\r\n                      }}\r\n                    >\r\n                      <CInput\r\n                        type=\"text\"\r\n                        style={{ height: Constant.styleHeightField }}\r\n                        id=\"add-th-name\"\r\n                        maxLength=\"50\"\r\n                        required\r\n                      />\r\n                    </Box>\r\n                    <CInvalidFeedback>\r\n                      {Constant.inValidNullMessage}\r\n                    </CInvalidFeedback>\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" sm=\"6\" md=\"3\">\r\n                  <CFormGroup>\r\n                    <CLabel>\r\n                      {Constant.arrFieldMasterPlaceContainerReturn[2]}\r\n                    </CLabel>\r\n                    <Box\r\n                      className=\"border-set\"\r\n                      component={Grid}\r\n                      item\r\n                      boxShadow={1}\r\n                      xs={{\r\n                        width: \" 100%\",\r\n                      }}\r\n                    >\r\n                      <CInput\r\n                        type=\"text\"\r\n                        style={{ height: Constant.styleHeightField }}\r\n                        id=\"add-en-name\"\r\n                        maxLength=\"50\"\r\n                        required\r\n                      />\r\n                    </Box>\r\n                    <CInvalidFeedback>\r\n                      {Constant.inValidNullMessage}\r\n                    </CInvalidFeedback>\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol md=\"3\" />\r\n                <CCol xs=\"12\" sm=\"6\" md=\"6\">\r\n                  <CFormGroup>\r\n                    <CLabel>\r\n                      {Constant.arrFieldMasterPlaceContainerReturn[3]}\r\n                    </CLabel>\r\n                    <Box\r\n                      className=\"border-set\"\r\n                      component={Grid}\r\n                      item\r\n                      boxShadow={1}\r\n                      xs={{\r\n                        width: \" 100%\",\r\n                      }}\r\n                    >\r\n                      <CInput\r\n                        type=\"text\"\r\n                        style={{ height: Constant.styleHeightField }}\r\n                        id=\"add-description\"\r\n                        maxLength=\"255\"\r\n                      />\r\n                    </Box>\r\n                  </CFormGroup>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow>\r\n                <CCol xs=\"12\" sm=\"6\" md=\"1\">\r\n                  <Box\r\n                    className=\"border-set\"\r\n                    component={Grid}\r\n                    item\r\n                    boxShadow={1}\r\n                    xs={{\r\n                      width: \" 100%\",\r\n                    }}\r\n                  >\r\n                    <CButton\r\n                      className=\"editbutton\"\r\n                      size={Constant.btAddSize}\r\n                      color=\"success\"\r\n                      block\r\n                      onClick={onClickCheckFormAddData}\r\n                    >\r\n                      {Constant.btSave}\r\n                    </CButton>\r\n                  </Box>\r\n                </CCol>\r\n              </CRow>\r\n            </CCard>\r\n          </Box>\r\n        </CForm>\r\n      </CCardBody>\r\n    </CCollapse>\r\n  );\r\n\r\n  const collapseEditForm = (index) => (\r\n    <CCollapse show={details.includes(index)}>\r\n      <CCardBody>{dataEditForm()}</CCardBody>\r\n    </CCollapse>\r\n  );\r\n\r\n  const dataEditForm = () => {\r\n    if (isLoadingData) {\r\n      return (\r\n        <div>\r\n          <CRow>\r\n            <CCol>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n            </CCol>\r\n          </CRow>\r\n          {showLoadingData()}\r\n          <CRow>\r\n            <CCol>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n            </CCol>\r\n          </CRow>\r\n        </div>\r\n      );\r\n    } else if (Object.keys(items).length) {\r\n      var data = { ...items };\r\n      return (\r\n        <CForm className=\"edit-needs-validation\" noValidate>\r\n          <CRow>\r\n            <CCol xs=\"12\" sm=\"6\" md=\"4\" className=\"text-left\">\r\n              <CFormGroup>\r\n                <CLabel>\r\n                  {Constant.arrFieldMasterPlaceContainerReturn[0]}\r\n                </CLabel>\r\n                <Box\r\n                  className=\"border-set\"\r\n                  component={Grid}\r\n                  item\r\n                  boxShadow={1}\r\n                  xs={{\r\n                    width: \" 100%\",\r\n                  }}\r\n                >\r\n                  <CInput\r\n                    type=\"text\"\r\n                    style={{ height: Constant.styleHeightField }}\r\n                    value={data.placeContainerReturnCode}\r\n                    onChange={handleChangeUpdateField(\r\n                      \"placeContainerReturnCode\"\r\n                    )}\r\n                    maxLength=\"10\"\r\n                    required\r\n                  />\r\n                </Box>\r\n                <CInvalidFeedback>\r\n                  {Constant.inValidNullMessage}\r\n                </CInvalidFeedback>\r\n              </CFormGroup>\r\n            </CCol>\r\n            <CCol xs=\"12\" sm=\"6\" md=\"4\" className=\"text-left\">\r\n              <CFormGroup>\r\n                <CLabel>\r\n                  {Constant.arrFieldMasterPlaceContainerReturn[1]}\r\n                </CLabel>\r\n                <Box\r\n                  className=\"border-set\"\r\n                  component={Grid}\r\n                  item\r\n                  boxShadow={1}\r\n                  xs={{\r\n                    width: \" 100%\",\r\n                  }}\r\n                >\r\n                  <CInput\r\n                    type=\"text\"\r\n                    style={{ height: Constant.styleHeightField }}\r\n                    value={data.placeContainerReturnNameThai}\r\n                    onChange={handleChangeUpdateField(\r\n                      \"placeContainerReturnNameThai\"\r\n                    )}\r\n                    maxLength=\"50\"\r\n                    required\r\n                  />\r\n                </Box>\r\n                <CInvalidFeedback>\r\n                  {Constant.inValidNullMessage}\r\n                </CInvalidFeedback>\r\n              </CFormGroup>\r\n            </CCol>\r\n            <CCol xs=\"12\" sm=\"6\" md=\"4\" className=\"text-left\">\r\n              <CFormGroup>\r\n                <CLabel>\r\n                  {Constant.arrFieldMasterPlaceContainerReturn[2]}\r\n                </CLabel>\r\n                <Box\r\n                  className=\"border-set\"\r\n                  component={Grid}\r\n                  item\r\n                  boxShadow={1}\r\n                  xs={{\r\n                    width: \" 100%\",\r\n                  }}\r\n                >\r\n                  <CInput\r\n                    type=\"text\"\r\n                    style={{ height: Constant.styleHeightField }}\r\n                    value={data.placeContainerReturnNameEng}\r\n                    onChange={handleChangeUpdateField(\r\n                      \"placeContainerReturnNameEng\"\r\n                    )}\r\n                    maxLength=\"50\"\r\n                    required\r\n                  />\r\n                </Box>\r\n                <CInvalidFeedback>\r\n                  {Constant.inValidNullMessage}\r\n                </CInvalidFeedback>\r\n              </CFormGroup>\r\n            </CCol>\r\n          </CRow>\r\n          <CRow>\r\n            <CCol xs=\"12\" sm=\"6\" md=\"6\" className=\"text-left\">\r\n              <CFormGroup>\r\n                <CLabel>\r\n                  {Constant.arrFieldMasterPlaceContainerReturn[3]}\r\n                </CLabel>\r\n                <Box\r\n                  className=\"border-set\"\r\n                  component={Grid}\r\n                  item\r\n                  boxShadow={1}\r\n                  xs={{\r\n                    width: \" 100%\",\r\n                  }}\r\n                >\r\n                  <CInput\r\n                    type=\"text\"\r\n                    style={{ height: Constant.styleHeightField }}\r\n                    value={data.description}\r\n                    onChange={handleChangeUpdateField(\"description\")}\r\n                    maxLength=\"255\"\r\n                  />\r\n                </Box>\r\n              </CFormGroup>\r\n            </CCol>\r\n            <CCol xs=\"12\" sm=\"6\" md=\"6\" className=\"text-left\">\r\n              <CFormGroup>\r\n                <CLabel className='mt-1' class=\"align-top\" variant=\"checkbox\" onClick={handleChangeUpdateField(\"isActive\")}>\r\n                  &nbsp; {Constant.txtFormisActive}\r\n                </CLabel>\r\n                <CFormGroup variant=\"checkbox\" className=\"checkbox\">\r\n                  <CSwitch className={'mx-1'} variant={'3d'} color={'success'} onChange={handleChangeUpdateField(\"isActive\")} checked={data.isActive} labelOn={'\\u2713'} labelOff={'\\u2715'} />\r\n                </CFormGroup>\r\n              </CFormGroup>\r\n            </CCol>\r\n          </CRow>\r\n          <CRow className=\"justify-content-center\">\r\n            <CCol xs=\"12\" sm=\"6\" md=\"2\">\r\n              <Box\r\n                className=\"border-set\"\r\n                component={Grid}\r\n                item\r\n                boxShadow={1}\r\n                xs={{\r\n                  width: \" 100%\",\r\n                }}\r\n              >\r\n                <CButton\r\n                  className=\"editbutton\"\r\n                  size={Constant.btHeaderSize}\r\n                  color=\"primary\"\r\n                  block\r\n                  onClick={onClickCheckFormEditData}\r\n                >\r\n                  {Constant.btEditData}\r\n                </CButton>\r\n              </Box>\r\n            </CCol>\r\n            <CCol xs=\"12\" sm=\"6\" md=\"2\">\r\n              <Box\r\n                className=\"border-set\"\r\n                component={Grid}\r\n                item\r\n                boxShadow={1}\r\n                xs={{\r\n                  width: \" 100%\",\r\n                }}\r\n              >\r\n                <CButton\r\n                  className=\"editbutton\"\r\n                  size={Constant.btHeaderSize}\r\n                  color=\"danger\"\r\n                  onClick={handleChangeConfirmDelete(\r\n                    data.placeContainerReturnId\r\n                  )}\r\n                  block\r\n                >\r\n                  {Constant.btDeleteData}\r\n                </CButton>\r\n              </Box>\r\n            </CCol>\r\n          </CRow>\r\n        </CForm>\r\n      );\r\n    }\r\n  };\r\n\r\n  const allModal = () => (\r\n    <div>\r\n      {/* Start Fetch Loading Modal */}\r\n      <CModal size=\"sm\" show={isPostingData} centered closeOnBackdrop={false}>\r\n        <CModalBody>{showLoadingData()}</CModalBody>\r\n      </CModal>\r\n      {/* End Fetch Loading Modal */}\r\n\r\n      {/* Start Fetch Error Modal */}\r\n      <CModal show={errorAPI} color=\"danger\" closeOnBackdrop={false}>\r\n        <CModalHeader>\r\n          <h5>\r\n            <CLabel>{Constant.apiTopicFetchError}</CLabel>\r\n          </h5>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CLabel>\r\n            {errorAPI\r\n              ? errorAPI.message != null\r\n                ? errorAPI.message\r\n                : errorAPI.messageDescription\r\n              : \" \"}\r\n          </CLabel>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setErrorAPI(null)}>\r\n            {Constant.btOK}\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      {/* End Fetch Error Modal */}\r\n\r\n      {/* Start Add Modal */}\r\n      <CModal\r\n        show={isConfirmSave}\r\n        onClose={() => setIsConfirmSave(!isConfirmSave)}\r\n        color=\"success\"\r\n      >\r\n        <CModalHeader closeButton>\r\n          <h5>\r\n            <CModalTitle>{Constant.titleConfirmChangeData}</CModalTitle>\r\n          </h5>\r\n        </CModalHeader>\r\n        <CModalBody>{Constant.contentConfirmAddData}</CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"success\" onClick={onClickAddData}>\r\n            {Constant.btOK}\r\n          </CButton>{\" \"}\r\n          <CButton\r\n            color=\"secondary\"\r\n            onClick={() => setIsConfirmSave(!isConfirmSave)}\r\n          >\r\n            {Constant.btCancel}\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      {/* End Add Modal */}\r\n\r\n      {/* Start Edit Modal */}\r\n      <CModal\r\n        show={isConfirmEdit}\r\n        onClose={() => setIsConfirmEdit(!isConfirmEdit)}\r\n        color=\"success\"\r\n      >\r\n        <CModalHeader closeButton>\r\n          <h5>\r\n            <CModalTitle>{Constant.titleConfirmChangeData}</CModalTitle>\r\n          </h5>\r\n        </CModalHeader>\r\n        <CModalBody>{Constant.contentConfirmEditData}</CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"success\" onClick={onClickEditData}>\r\n            {Constant.btOK}\r\n          </CButton>{\" \"}\r\n          <CButton\r\n            color=\"secondary\"\r\n            onClick={() => setIsConfirmEdit(!isConfirmEdit)}\r\n          >\r\n            {Constant.btCancel}\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      {/* End Edit Modal */}\r\n\r\n      {/* Start Delete Modal */}\r\n      <CModal\r\n        show={isConfirmDelete}\r\n        onClose={() => setIsConfirmDelete(!isConfirmDelete)}\r\n        color=\"danger\"\r\n      >\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>{Constant.titleConfirmChangeData}</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>{Constant.contentConfirmDeleteData}</CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"danger\" onClick={onClickDeleteData}>\r\n            {Constant.btOK}\r\n          </CButton>{\" \"}\r\n          <CButton\r\n            color=\"secondary\"\r\n            onClick={() => setIsConfirmDelete(!isConfirmDelete)}\r\n          >\r\n            {Constant.btCancel}\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      {/* End Delete Modal */}\r\n    </div>\r\n  );\r\n\r\n  if (error) {\r\n    return (\r\n      <CCol className=\"text-center\">\r\n        {Constant.apiTopicFetchError} : {error.message}\r\n      </CCol>\r\n    );\r\n  } else if (!isLoaded) {\r\n    return showLoadingData();\r\n  } else {\r\n    return (\r\n      <CRow>\r\n        <CCol xs=\"12\" lg=\"12\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              <CRow>\r\n                <CCol>\r\n                  <h3 className=\"headertable\">\r\n                    {Constant.txtMasterPlaceContainerReturn}\r\n                  </h3>\r\n                </CCol>\r\n                <CCol md=\"2\" xs=\"4\">\r\n                  <Box\r\n                    className=\"border-set\"\r\n                    component={Grid}\r\n                    item\r\n                    boxShadow={1}\r\n                    xs={{\r\n                      width: \" 100%\",\r\n                    }}\r\n                  >\r\n                    <CButton\r\n                      block\r\n                      className=\"btn-mainsmp\"\r\n                      size={Constant.btHeaderSize}\r\n                      onClick={handleChangeAddForm}\r\n                    >\r\n                      {Constant.btAddData}\r\n                    </CButton>\r\n                  </Box>\r\n                </CCol>\r\n              </CRow>\r\n              {collapseAddForm()}\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              {/* <CRow className=\"justify-content-center\"> */}\r\n              <CCard>\r\n                <CCardBody>\r\n                  <CDataTable\r\n                    items={baseItems}\r\n                    fields={fields}\r\n                    columnFilter\r\n                    tableFilter={{\r\n                      label: `${Constant.tabletxtSearch}`,\r\n                      placeholder: `${Constant.tabletxtPlaceholder}`,\r\n                    }}\r\n                    itemsPerPageSelect={{\r\n                      label: `${Constant.tabletxtCountPage}`,\r\n                    }}\r\n                    itemsPerPage={10}\r\n                    hover\r\n                    sorter\r\n                    pagination\r\n                    scopedSlots={{\r\n                      isActive: (data) => (\r\n                        <td className=\"py-2 text-center\">\r\n                          {data.isActive ? (\r\n                            <CIcon\r\n                              name=\"cil-check-circle\"\r\n                              style={{ color: \"green\" }}\r\n                              size=\"2xl\"\r\n                            />\r\n                          ) : (\r\n                            <CIcon\r\n                              name=\"cil-x-circle\"\r\n                              style={{ color: \"red\" }}\r\n                              size=\"2xl\"\r\n                            />\r\n                          )}\r\n                        </td>\r\n                      ),\r\n                      manage: (data, index) => (\r\n                        <td className=\"py-2\">\r\n                          <Box\r\n                            className=\"border-set\"\r\n                            component={Grid}\r\n                            item\r\n                            boxShadow={1}\r\n                            xs={{\r\n                              width: \" 100%\",\r\n                            }}\r\n                          >\r\n                            <CButton\r\n                              color=\"primary\"\r\n                              variant=\"outline\"\r\n                              shape=\"square\"\r\n                              size={Constant.btHeaderSize}\r\n                              block\r\n                              onClick={() => {\r\n                                toggleDetails(\r\n                                  index,\r\n                                  data.placeContainerReturnId\r\n                                );\r\n                              }}\r\n                            >\r\n                              {details.includes(index)\r\n                                ? `${Constant.btCollapseHide}`\r\n                                : `${Constant.btCollapseShow}`}\r\n                            </CButton>\r\n                          </Box>\r\n                        </td>\r\n                      ),\r\n                      details: (data, index) => {\r\n                        return collapseEditForm(index);\r\n                      },\r\n                    }}\r\n                  />\r\n                </CCardBody>\r\n              </CCard>\r\n              {/* </CRow> */}\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        {allModal()}\r\n      </CRow>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}