{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","components/other/EditProfile.js"],"names":["_slicedToArray","arr","i","arrayWithHoles","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","nonIterableRest","_toConsumableArray","Array","isArray","arrayLikeToArray","iterableToArray","TypeError","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","_classPrivateFieldBase","receiver","privateKey","prototype","hasOwnProperty","call","id","_classPrivateFieldKey","name","_unsupportedIterableToArray","o","minLen","n","toString","slice","constructor","from","test","_arrayLikeToArray","len","arr2","_arrayWithHoles","_nonIterableRest","_iterableToArray","iter","Register","useState","setError","isLoaded","setIsLoaded","items","setItems","isPostingData","setIsPostingData","errorAPI","setErrorAPI","isConfirmEdit","setIsConfirmEdit","isChangeRePassword","setIsChangeRePassword","isShowFormChangePass","setIsShowFormChangePass","isShowSuccessChangePass","setIsShowSuccessChangePass","_UserId","parseInt","localStorage","getItem","getIsValidForm","formClassName","forms","document","querySelectorAll","isValid","forEach","form","checkValidity","classList","add","setNoValidateForm","remove","handleChangeUpdateField","type","e","newObj","firstName","target","lastName","aliasName","email","handleChangeValidationPassword","input","match","getElementById","style","color","fnClearDataFormChangePass","onClickChangePassword","oldPass","pass","rePass","newArr","fnChangePassword","onClickEditData","userId","userName","isActive","password","transporterId","userGroupId","fnEditUser","arrData","Repository","fetchChangePasswordByUser","result","httpCode","fetchEditUserList","window","location","reload","useEffect","fetchGetUserListById","data","showLoadingData","className","Constant","apiLoadingData","variant","size","apiTopicFetchError","message","keys","show","centered","closeOnBackdrop","messageDescription","onClick","btOK","onClose","closeButton","titleChangePassword","sm","md","component","Grid","item","boxShadow","xs","width","required","inValidNullMessage","onChange","invalid","contentHeaderSetPassword","contentBodySetPassword01","contentBodySetPassword02","contentBodySetPassword03","contentBodySetPassword04","btCancel","titleConfirmChangeData","contentSuccessChangePass","contentConfirmEditData","lg","xl","disabled","block"],"mappings":"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","file":"static/js/47.6becef8a.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _classPrivateFieldBase(receiver, privateKey) {\n  if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n    throw new TypeError(\"attempted to use private field on non-instance\");\n  }\n\n  return receiver;\n}","var id = 0;\nexport default function _classPrivateFieldKey(name) {\n  return \"__private_\" + id++ + \"_\" + name;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import React, { useState, useEffect } from \"react\";\r\nimport Repository from \"../../repositories/Repository\";\r\nimport Constant from \"../../helpers/Constant\";\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardFooter,\r\n    CCol,\r\n    CContainer,\r\n    CForm,\r\n    CInput,\r\n    CInputGroup,\r\n    CInputGroupPrepend,\r\n    CInputGroupText,\r\n    CLabel,\r\n    CRow,\r\n    CModalTitle,\r\n    CModalHeader,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CInvalidFeedback,\r\n    CModal,\r\n    CFormGroup,\r\n    CSpinner\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst Register = () => {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    const [items, setItems] = useState({});\r\n\r\n    const [isPostingData, setIsPostingData] = useState(false);\r\n    const [errorAPI, setErrorAPI] = useState(null);\r\n\r\n    const [isConfirmEdit, setIsConfirmEdit] = useState(false);\r\n\r\n    const [isChangeRePassword, setIsChangeRePassword] = useState(false);\r\n    const [isShowFormChangePass, setIsShowFormChangePass] = useState(false);\r\n    const [isShowSuccessChangePass, setIsShowSuccessChangePass] = useState(false);\r\n\r\n    const _UserId = parseInt(localStorage.getItem('userId'));\r\n    const _TranspoterId = parseInt(localStorage.getItem('transporterId'));\r\n\r\n    const getIsValidForm = (formClassName) => {\r\n        var forms = document.querySelectorAll(`.${formClassName}`);\r\n        var isValid = false;\r\n        Array.prototype.slice.call(forms).forEach(function (form) {\r\n            if (form.checkValidity()) {\r\n                isValid = true;\r\n            }\r\n            form.classList.add(\"was-validated\");\r\n        });\r\n        return isValid;\r\n    };\r\n\r\n    const setNoValidateForm = (formClassName) => {\r\n        var forms = document.querySelectorAll(`.${formClassName}`);\r\n        Array.prototype.slice.call(forms).forEach(function (form) {\r\n            form.classList.remove(\"was-validated\");\r\n        });\r\n    };\r\n\r\n    const handleChangeUpdateField = (type) => (e) => {\r\n        var newObj = { ...items };\r\n        if (type === \"firstName\") {\r\n            newObj.firstName = e.target.value;\r\n        }\r\n        else if (type === \"lastName\") {\r\n            newObj.lastName = e.target.value;\r\n        }\r\n        else if (type === \"aliasName\") {\r\n            newObj.aliasName = e.target.value;\r\n        }\r\n        else if (type === \"email\") {\r\n            newObj.email = e.target.value;\r\n        }\r\n        setItems(newObj);\r\n    }\r\n\r\n    const handleChangeValidationPassword = (e) => {\r\n        var upperChar = /[A-Z]/g;\r\n        var numberChar = /[0-9]/g;\r\n        var specialChar = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n        var length = 8;\r\n        var input = e.target.value;\r\n\r\n        if (input.match(upperChar)) {\r\n            document.getElementById(\"rules-01\").style.color = \"green\";\r\n        }\r\n        else {\r\n            document.getElementById(\"rules-01\").style.color = \"red\";\r\n        }\r\n\r\n        if (input.match(numberChar)) {\r\n            document.getElementById(\"rules-02\").style.color = \"green\";\r\n        }\r\n        else {\r\n            document.getElementById(\"rules-02\").style.color = \"red\";\r\n        }\r\n\r\n        if (input.match(specialChar)) {\r\n            document.getElementById(\"rules-03\").style.color = \"green\";\r\n        }\r\n        else {\r\n            document.getElementById(\"rules-03\").style.color = \"red\";\r\n        }\r\n\r\n        if (input.length >= length) {\r\n            document.getElementById(\"rules-04\").style.color = \"green\";\r\n        }\r\n        else {\r\n            document.getElementById(\"rules-04\").style.color = \"red\";\r\n        }\r\n    }\r\n\r\n    const fnClearDataFormChangePass = () => {\r\n        setIsChangeRePassword(false);\r\n        setNoValidateForm(\"change-pass-need-validation\");\r\n        document.getElementById(\"old-password\").value = \"\";\r\n        document.getElementById(\"change-password\").value = \"\";\r\n        document.getElementById(\"change-re-password\").value = \"\";\r\n    }\r\n\r\n    const onClickChangePassword = () => {\r\n        var oldPass = document.getElementById(\"old-password\").value;\r\n        var pass = document.getElementById(\"change-password\").value;\r\n        var rePass = document.getElementById(\"change-re-password\").value;\r\n        if (getIsValidForm(\"change-pass-need-validation\") && pass === rePass) {\r\n            setIsChangeRePassword(false);\r\n            setIsShowFormChangePass(!isShowFormChangePass);\r\n            var userId = _UserId;\r\n            var newArr = [userId, pass, oldPass];\r\n\r\n            fnClearDataFormChangePass();\r\n\r\n            // console.log(newArr);\r\n            fnChangePassword(newArr);\r\n        }\r\n        else if (pass !== rePass) {\r\n            setNoValidateForm(\"change-pass-need-validation\");\r\n            setIsChangeRePassword(true);\r\n        }\r\n        else {\r\n            setIsChangeRePassword(false);\r\n        }\r\n    }\r\n\r\n    const onClickCheckEditData = () => {\r\n        if (getIsValidForm(\"edit-need-validation\")) {\r\n            setIsConfirmEdit(!isConfirmEdit);\r\n        }\r\n    }\r\n\r\n    const onClickEditData = () => {\r\n        setIsConfirmEdit(!isConfirmEdit);\r\n        var newObj = { ...items };\r\n        var firstName = newObj.firstName;\r\n        var lastName = newObj.lastName;\r\n        var aliasName = newObj.aliasName;\r\n        var email = newObj.email;\r\n\r\n        var newArr = [\r\n            newObj.userId,\r\n            newObj.userName,\r\n            newObj.isActive,\r\n            newObj.password,\r\n            aliasName,\r\n            firstName,\r\n            lastName,\r\n            newObj.transporterId,\r\n            email,\r\n            _UserId,\r\n            newObj.userGroupId\r\n        ];\r\n\r\n        // console.log(newArr);\r\n        fnEditUser(newArr);\r\n    }\r\n\r\n    const fnChangePassword = (arrData = []) => {\r\n        setIsPostingData(true);\r\n        Repository.fetchChangePasswordByUser(arrData).then(\r\n            (result) => {\r\n                setIsPostingData(false);\r\n                if (result.httpCode === \"200\") {\r\n                    setIsShowSuccessChangePass(!isShowSuccessChangePass);\r\n                }\r\n                else {\r\n                    setErrorAPI(result);\r\n                }\r\n            },\r\n            (error) => {\r\n                setIsPostingData(false);\r\n                setErrorAPI(error);\r\n            }\r\n        );\r\n    }\r\n\r\n    const fnEditUser = (arrData = []) => {\r\n        setIsPostingData(true);\r\n        Repository.fetchEditUserList(arrData).then(\r\n            (result) => {\r\n                setIsPostingData(false);\r\n                if (result.httpCode === \"200\") {\r\n                    window.location.reload(false);\r\n                }\r\n                else {\r\n                    setErrorAPI(result);\r\n                }\r\n            },\r\n            (error) => {\r\n                setIsPostingData(false);\r\n                setErrorAPI(error);\r\n            }\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n        Repository.fetchGetUserListById(_UserId).then(\r\n            (result) => {\r\n                setIsLoaded(true);\r\n                if (result.httpCode === \"200\") {\r\n                    setItems(result.data);\r\n                } else {\r\n                    setError(result);\r\n                }\r\n            },\r\n            (error) => {\r\n                setIsLoaded(true);\r\n                setError(error);\r\n            }\r\n        );\r\n    }, []);\r\n\r\n    const showLoadingData = () => (\r\n        <CCol className=\"text-center\">\r\n            <CLabel>\r\n                {Constant.apiLoadingData}\r\n            </CLabel>\r\n            {\" \"}\r\n            <CSpinner variant=\"grow\" size=\"md\" />\r\n        </CCol>\r\n    )\r\n\r\n    const modalForm = () => (\r\n        <div>\r\n            {/* Start Fetch Loading Modal */}\r\n            <CModal size=\"sm\" show={isPostingData} centered closeOnBackdrop={false}>\r\n                <CModalBody>{showLoadingData()}</CModalBody>\r\n            </CModal>\r\n            {/* End Fetch Loading Modal */}\r\n\r\n            {/* Start Fetch Error Modal */}\r\n            <CModal show={errorAPI} color=\"danger\" closeOnBackdrop={false}>\r\n                <CModalHeader>\r\n                    <h5>\r\n                        <CLabel>{Constant.apiTopicFetchError}</CLabel>\r\n                    </h5>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CLabel>\r\n                        {errorAPI\r\n                            ? errorAPI.message != null\r\n                                ? errorAPI.message\r\n                                : errorAPI.messageDescription\r\n                            : \" \"}\r\n                    </CLabel>\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"secondary\" onClick={() => setErrorAPI(null)}>\r\n                        {Constant.btOK}\r\n                    </CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n            {/* End Fetch Error Modal */}\r\n\r\n            {/* Start Show Form Change Password Modal */}\r\n            <CModal\r\n                show={isShowFormChangePass}\r\n                onClose={() => { fnClearDataFormChangePass(); setIsShowFormChangePass(!isShowFormChangePass); }}\r\n                color=\"success\"\r\n                centered\r\n                closeOnBackdrop={false}\r\n            >\r\n                <CModalHeader closeButton>\r\n                    <h5>\r\n                        <CModalTitle>{Constant.titleChangePassword}</CModalTitle>\r\n                    </h5>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CForm className=\"change-pass-need-validation\">\r\n                        <CRow>\r\n                            <CCol sm=\"12\" md=\"6\">\r\n                                <CFormGroup>\r\n                                    <CLabel>รหัสผ่านเดิม</CLabel>\r\n                                    <Box\r\n                                        className=\"border-set\"\r\n                                        component={Grid}\r\n                                        item\r\n                                        boxShadow={1}\r\n                                        xs={{\r\n                                            width: \" 100%\",\r\n                                        }}\r\n                                    >\r\n                                        <CInput type=\"password\" id=\"old-password\" required />\r\n                                        <CInvalidFeedback>{Constant.inValidNullMessage}</CInvalidFeedback>\r\n                                    </Box>\r\n                                </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol sm=\"12\" md=\"6\">\r\n                                <CFormGroup>\r\n                                    <CLabel>รหัสผ่านใหม่</CLabel>\r\n                                    <Box\r\n                                        className=\"border-set\"\r\n                                        component={Grid}\r\n                                        item\r\n                                        boxShadow={1}\r\n                                        xs={{\r\n                                            width: \" 100%\",\r\n                                        }}\r\n                                    >\r\n                                        <CInput type=\"password\" id=\"change-password\" onChange={handleChangeValidationPassword} required />\r\n                                        <CInvalidFeedback>{Constant.inValidNullMessage}</CInvalidFeedback>\r\n                                    </Box>\r\n                                </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol sm=\"12\" md=\"6\">\r\n                                <CFormGroup>\r\n                                    <CLabel>ยืนยันรหัสผ่านใหม่</CLabel>\r\n                                    <Box\r\n                                        className=\"border-set\"\r\n                                        component={Grid}\r\n                                        item\r\n                                        boxShadow={1}\r\n                                        xs={{\r\n                                            width: \" 100%\",\r\n                                        }}\r\n                                    >\r\n                                        <CInput type=\"password\" id=\"change-re-password\" invalid={isChangeRePassword} required />\r\n                                        <CInvalidFeedback>{Constant.inValidNullMessage}</CInvalidFeedback>\r\n                                    </Box>\r\n                                </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol>\r\n                                <br />\r\n                                <p id=\"rules-header\">{Constant.contentHeaderSetPassword}</p>\r\n                                <p id=\"rules-01\" style={{ color: 'red' }}>{Constant.contentBodySetPassword01}</p>\r\n                                <p id=\"rules-02\" style={{ color: 'red' }}>{Constant.contentBodySetPassword02}</p>\r\n                                <p id=\"rules-03\" style={{ color: 'red' }}>{Constant.contentBodySetPassword03}</p>\r\n                                <p id=\"rules-04\" style={{ color: 'red' }}>{Constant.contentBodySetPassword04}</p>\r\n                            </CCol>\r\n                        </CRow>\r\n                    </CForm>\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"success\" onClick={onClickChangePassword}>\r\n                        {Constant.btOK}\r\n                    </CButton>{\" \"}\r\n                    <CButton\r\n                        color=\"secondary\"\r\n                        onClick={() => { fnClearDataFormChangePass(); setIsShowFormChangePass(!isShowFormChangePass); }}\r\n                    >\r\n                        {Constant.btCancel}\r\n                    </CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n            {/* End Show Form Change Password Modal */}\r\n\r\n            {/* Start Show Success Change Password Modal */}\r\n            <CModal\r\n                show={isShowSuccessChangePass}\r\n                onClose={() => { setIsShowSuccessChangePass(!isShowSuccessChangePass); window.location.reload(false); }}\r\n                color=\"success\"\r\n                centered\r\n            >\r\n                <CModalHeader closeButton>\r\n                    <h5>\r\n                        <CModalTitle>{Constant.titleConfirmChangeData}</CModalTitle>\r\n                    </h5>\r\n                </CModalHeader>\r\n                <CModalBody>{Constant.contentSuccessChangePass}</CModalBody>\r\n                <CModalFooter>\r\n                    <CButton\r\n                        color=\"secondary\"\r\n                        onClick={() => { setIsShowSuccessChangePass(!isShowSuccessChangePass); window.location.reload(false); }}\r\n                    >\r\n                        {Constant.btOK}\r\n                    </CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n            {/* End Show Success Change Password Modal */}\r\n\r\n            {/* Start Edit Modal */}\r\n            <CModal\r\n                show={isConfirmEdit}\r\n                onClose={() => setIsConfirmEdit(!isConfirmEdit)}\r\n                color=\"success\"\r\n            >\r\n                <CModalHeader closeButton>\r\n                    <h5><CModalTitle  >{Constant.titleConfirmChangeData}</CModalTitle></h5>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    {Constant.contentConfirmEditData}\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"success\" onClick={onClickEditData}>\r\n                        {Constant.btOK}\r\n                    </CButton>{' '}\r\n                    <CButton color=\"secondary\" onClick={() => setIsConfirmEdit(!isConfirmEdit)}>\r\n                        {Constant.btCancel}\r\n                    </CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n            {/* End Edit Modal */}\r\n        </div>\r\n    )\r\n\r\n    if (error) {\r\n        return (\r\n            <CCol className=\"text-center\">\r\n                {Constant.apiTopicFetchError} : {error.message}\r\n            </CCol>\r\n        );\r\n    }\r\n    else if (!isLoaded || !Object.keys(items).length) {\r\n        return (\r\n            showLoadingData()\r\n        );\r\n    }\r\n    else {\r\n        var newObj = { ...items };\r\n        return (\r\n            <div>\r\n                {modalForm()}\r\n                <CContainer>\r\n                    <CRow className=\"justify-content-center\">\r\n                        <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                            <CCard className=\"mx-4\">\r\n                                <CCardBody className=\"p-4\">\r\n                                    <CForm className=\"edit-need-validation\">\r\n                                        <h1>Edit Profile</h1>\r\n                                        <p className=\"text-muted\">Change data your account</p>\r\n                                        <CInputGroup className=\"mb-3\">\r\n                                            <CInputGroupPrepend>\r\n                                                <CInputGroupText>\r\n                                                    First Name\r\n                                                </CInputGroupText>\r\n                                            </CInputGroupPrepend>\r\n                                            <CInput\r\n                                                type=\"text\"\r\n                                                value={newObj.firstName}\r\n                                                onChange={handleChangeUpdateField(\"firstName\")}\r\n                                            />\r\n                                        </CInputGroup>\r\n                                        <CInputGroup className=\"mb-3\">\r\n                                            <CInputGroupPrepend>\r\n                                                <CInputGroupText>\r\n                                                    Last Name\r\n                                                </CInputGroupText>\r\n                                            </CInputGroupPrepend>\r\n                                            <CInput\r\n                                                type=\"text\"\r\n                                                value={newObj.lastName}\r\n                                                onChange={handleChangeUpdateField(\"lastName\")}\r\n                                            />\r\n                                        </CInputGroup>\r\n                                        <CInputGroup className=\"mb-3\">\r\n                                            <CInputGroupPrepend>\r\n                                                <CInputGroupText>\r\n                                                    Alias Name\r\n                                                </CInputGroupText>\r\n                                            </CInputGroupPrepend>\r\n                                            <CInput\r\n                                                type=\"text\"\r\n                                                value={newObj.aliasName}\r\n                                                onChange={handleChangeUpdateField(\"aliasName\")}\r\n                                            />\r\n                                        </CInputGroup>\r\n                                        <CInputGroup className=\"mb-3\">\r\n                                            <CInputGroupPrepend>\r\n                                                <CInputGroupText>\r\n                                                    Email\r\n                                                </CInputGroupText>\r\n                                            </CInputGroupPrepend>\r\n                                            <CInput\r\n                                                type=\"text\"\r\n                                                value={newObj.email}\r\n                                                onChange={handleChangeUpdateField(\"email\")}\r\n                                            />\r\n                                        </CInputGroup>\r\n                                        <CInputGroup className=\"mb-3\">\r\n                                            <CInputGroupPrepend>\r\n                                                <CInputGroupText>\r\n                                                    Username\r\n                                                </CInputGroupText>\r\n                                            </CInputGroupPrepend>\r\n                                            <CInput\r\n                                                type=\"text\"\r\n                                                value={newObj.userName}\r\n                                                disabled\r\n                                            />\r\n                                        </CInputGroup>\r\n                                        {/* <CInputGroup className=\"mb-3\">\r\n                                        <CInputGroupPrepend>\r\n                                            <CInputGroupText>\r\n                                                <CIcon name=\"cil-lock-locked\" />\r\n                                            </CInputGroupText>\r\n                                        </CInputGroupPrepend>\r\n                                        <CInput type=\"password\" placeholder=\"Password\" />\r\n                                    </CInputGroup>\r\n                                    <CInputGroup className=\"mb-4\">\r\n                                        <CInputGroupPrepend>\r\n                                            <CInputGroupText>\r\n                                                <CIcon name=\"cil-lock-locked\" />\r\n                                            </CInputGroupText>\r\n                                        </CInputGroupPrepend>\r\n                                        <CInput type=\"password\" placeholder=\"Repeat password\" />\r\n                                    </CInputGroup> */}\r\n                                        <CButton\r\n                                            color=\"warning\"\r\n                                            onClick={() => setIsShowFormChangePass(!isShowFormChangePass)}\r\n                                            block\r\n                                        >\r\n                                            Change Password\r\n                                        </CButton>\r\n                                    </CForm>\r\n                                </CCardBody>\r\n                                <CCardFooter className=\"p-4\">\r\n                                    <CRow>\r\n                                        <CCol xs=\"12\" sm=\"6\">\r\n                                            <CButton\r\n                                                color=\"success\"\r\n                                                block\r\n                                                onClick={onClickCheckEditData}\r\n                                            >\r\n                                                <span>\r\n                                                    Save\r\n                                                </span>\r\n                                            </CButton>\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\" sm=\"6\">\r\n                                            <CButton\r\n                                                color=\"danger\"\r\n                                                block\r\n                                            >\r\n                                                <span>\r\n                                                    Cancel\r\n                                                </span>\r\n                                            </CButton>\r\n                                        </CCol>\r\n                                    </CRow>\r\n                                </CCardFooter>\r\n                            </CCard>\r\n                        </CCol>\r\n                    </CRow>\r\n                </CContainer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register\r\n"],"sourceRoot":""}