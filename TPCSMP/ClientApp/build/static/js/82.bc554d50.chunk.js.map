{"version":3,"sources":["reusable/DocsLink.js","views/users/UsersData.js","components/master/location/Port.js"],"names":["DocsLink","props","name","text","rest","href","className","rel","target","React","memo","usersData","id","registered","role","status","fields","key","label","_style","width","sorter","filter","District","useState","error","setError","isLoaded","setIsLoaded","primary","setPrimary","danger","setDanger","items","setItems","details","setDetails","collapse","setCollapse","port","setPortList","portCode","setPortCode","portNameEng","setPortNameEng","portNameThai","setPortNameThai","description","setDesc","isActive","setisActive","isLoadingData","setIsLoadingData","fnGetPortListById","portId","Repository","fetchGetPorttListById","then","result","httpCode","data","console","log","handleChangeUpdateField","index","e","newArr","value","checked","onClickEditData","arrObj","editPort","onClickAddCheck","checkprot","find","x","document","getElementById","formClassName","forms","querySelectorAll","isValid","Array","prototype","slice","call","forEach","form","checkValidity","classList","add","getIsValidForm","toggle","preventDefault","handleChange","event","insertPort","fetchAddPortList","window","location","reload","fetchEditPortList","deletePort","fetchDeletePortList","showLoadingData","Constant","apiLoadingData","variant","size","useEffect","fetchPortList","message","xs","sm","md","component","Grid","item","boxShadow","btHeaderSize","block","onClick","btAddData","show","novalidate","maxLength","type","onChange","required","class","color","defaultChecked","labelOn","labelOff","btAddSize","onClose","closeButton","columnFilter","tableFilter","placeholder","itemsPerPageSelect","striped","bordered","itemsPerPage","pagination","scopedSlots","style","show_details","position","indexOf","newDetails","splice","toggleDetails","includes","length","htmlFor","action","method","autoComplete"],"mappings":"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","file":"static/js/82.bc554d50.chunk.js","sourcesContent":["import React from 'react'\r\nimport { CLink } from '@coreui/react'\r\n\r\nconst DocsLink = props => {\r\n  const {\r\n    name,\r\n    text,\r\n    ...rest\r\n  } = props\r\n\r\n  const href = name ? `https://coreui.io/react/docs/components/${name}` : props.href\r\n\r\n  return (\r\n    <div className=\"card-header-actions\">\r\n      <CLink \r\n        {...rest}\r\n        href={href}\r\n        rel=\"noreferrer noopener\" \r\n        target=\"_blank\" \r\n        className=\"card-header-action\"  \r\n      >\r\n        <small className=\"text-muted\">{ text || 'docs' }</small>\r\n      </CLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(DocsLink)","const usersData = [\r\n  {id: 0, name: 'John Doe', registered: '2018/01/01', role: 'Guest', status: 'Pending'},\r\n  {id: 1, name: 'Samppa Nori', registered: '2018/01/01', role: 'Member', status: 'Active'},\r\n  {id: 2, name: 'Estavan Lykos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\r\n  {id: 3, name: 'Chetan Mohamed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\r\n  {id: 4, name: 'Derick Maximinus', registered: '2018/03/01', role: 'Member', status: 'Pending'},\r\n  {id: 5, name: 'Friderik Dávid', registered: '2018/01/21', role: 'Staff', status: 'Active'},\r\n  {id: 6, name: 'Yiorgos Avraamu', registered: '2018/01/01', role: 'Member', status: 'Active'},\r\n  {id: 7, name: 'Avram Tarasios', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\r\n  {id: 8, name: 'Quintin Ed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\r\n  {id: 9, name: 'Enéas Kwadwo', registered: '2018/03/01', role: 'Member', status: 'Pending'},\r\n  {id: 10, name: 'Agapetus Tadeáš', registered: '2018/01/21', role: 'Staff', status: 'Active'},\r\n  {id: 11, name: 'Carwyn Fachtna', registered: '2018/01/01', role: 'Member', status: 'Active'},\r\n  {id: 12, name: 'Nehemiah Tatius', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\r\n  {id: 13, name: 'Ebbe Gemariah', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\r\n  {id: 14, name: 'Eustorgios Amulius', registered: '2018/03/01', role: 'Member', status: 'Pending'},\r\n  {id: 15, name: 'Leopold Gáspár', registered: '2018/01/21', role: 'Staff', status: 'Active'},\r\n  {id: 16, name: 'Pompeius René', registered: '2018/01/01', role: 'Member', status: 'Active'},\r\n  {id: 17, name: 'Paĉjo Jadon', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\r\n  {id: 18, name: 'Micheal Mercurius', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\r\n  {id: 19, name: 'Ganesha Dubhghall', registered: '2018/03/01', role: 'Member', status: 'Pending'},\r\n  {id: 20, name: 'Hiroto Šimun', registered: '2018/01/21', role: 'Staff', status: 'Active'},\r\n  {id: 21, name: 'Vishnu Serghei', registered: '2018/01/01', role: 'Member', status: 'Active'},\r\n  {id: 22, name: 'Zbyněk Phoibos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\r\n  {id: 23, name: 'Aulus Agmundr', registered: '2018/01/01', role: 'Member', status: 'Pending'},\r\n  {id: 42, name: 'Ford Prefect', registered: '2001/05/25', role: 'Alien', status: 'Don\\'t panic!'}\r\n]\r\n\r\nexport default usersData\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport Repository from '../../../repositories/Repository'\r\nimport Constant from \"../../../helpers/Constant\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CCollapse,\r\n  CInput,\r\n  CSwitch,\r\n  CLabel,\r\n  CForm,\r\n  CFormGroup,\r\n  CFormText,\r\n  CModal,\r\n  CCardFooter,\r\n  CSpinner,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CInvalidFeedback,\r\n  CValidFeedback,\r\n  CProgress,\r\n  CLink,\r\n  CSubheader,\r\n  CBreadcrumbRouter,\r\n  CRow\r\n} from '@coreui/react'\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport { DocsLink } from '../../../reusable'\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport usersData from '../../../views/users/UsersData'\r\nimport functionController from '../../../helpers/FunctionController';\r\n\r\n\r\nconst fields = [\r\n  // 'districtId',\r\n  {\r\n    key: 'portCode',\r\n    label: \"รหัสท่าเรือ\",\r\n  }, {\r\n    key: 'portNameThai',\r\n    label: \"ชื่อท่าเรือ(ไทย)\",\r\n  }, {\r\n    key: 'portNameEng',\r\n    label: \"ชื่อท่าเรือ(อังกฤษ)\",\r\n  },\r\n  {\r\n    key: 'description',\r\n    label: \"รายละเอียด\",\r\n  }, {\r\n    key: 'isActive',\r\n    label: \"สถานะ\",\r\n  }, {\r\n    key: \"show_details\",\r\n    label: \"\",\r\n    _style: { width: \"1%\" },\r\n    sorter: false,\r\n    filter: false,\r\n  },]\r\n\r\nconst District = () => {\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [district, setDistrict] = useState([]);\r\n  // const [items, setItems] = useState([]);\r\n  const [modal, setModal] = useState(true);\r\n  const [primary, setPrimary] = useState(false);\r\n  const [danger, setDanger] = useState(false)\r\n  const [items, setItems] = useState([]);\r\n  const [details, setDetails] = useState([]);\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [collapseMulti, setCollapseMulti] = useState([false, false])\r\n  const [port, setPortList] = useState([])\r\n  const [portCode, setPortCode] = useState();\r\n  const [portNameEng, setPortNameEng] = useState();\r\n  const [portNameThai, setPortNameThai] = useState();\r\n  const [description, setDesc] = useState();\r\n  const [errortext, seterrortxt] = useState('กรอกข้อมูลให้ครบถ้วน');\r\n  const [errortext1, seterrortxt1] = useState('กรอกข้อมูลให้ครบถ้วน');\r\n  const [isActive, setisActive] = useState(false);\r\n  const [validations, setValidate] = useState(false);\r\n  const [validation, setValidates] = useState(false);\r\n  const [districtCode, setdistrictCode] = useState();\r\n  const [isLoadingData, setIsLoadingData] = useState(false);\r\n  const options = {\r\n    method: 'POST',\r\n\r\n\r\n  }\r\n\r\n  const pageCode = \"\";\r\n\r\n  const toggleDetails = (index, id) => {\r\n    const position = details.indexOf(index)\r\n    let newDetails = details.slice()\r\n    if (position !== -1) {\r\n      newDetails.splice(position, 1)\r\n    } else {\r\n      newDetails = [details, index]\r\n      if (!isLoadingData) {\r\n        fnGetPortListById(id)\r\n      }\r\n\r\n    }\r\n    setDetails(newDetails)\r\n  }\r\n\r\n  const fnGetPortListById = (portId) => {\r\n    setIsLoadingData(true)\r\n    Repository.fetchGetPorttListById(portId)\r\n      .then(\r\n        (result) => {\r\n          setIsLoadingData(false)\r\n          setIsLoaded(true);\r\n          if (result.httpCode === \"200\") {\r\n            setItems(result.data)\r\n          }\r\n          else {\r\n            console.log(result);\r\n          }\r\n        },\r\n        (error) => {\r\n          setIsLoadingData(false)\r\n          console.log(error);\r\n        }\r\n      )\r\n  }\r\n\r\n  const getIsValidForm = (formClassName) => {\r\n    var forms = document.querySelectorAll(`.${formClassName}`);\r\n    var isValid = false;\r\n    Array.prototype.slice.call(forms)\r\n      .forEach(function (form) {\r\n        if (form.checkValidity()) {\r\n          isValid = true;\r\n        }\r\n        form.classList.add('was-validated');\r\n      });\r\n    return (isValid);\r\n  }\r\n\r\n  const setNoValidateForm = (formClassName) => {\r\n    var forms = document.querySelectorAll(`.${formClassName}`);\r\n    Array.prototype.slice.call(forms)\r\n      .forEach(function (form) {\r\n        form.classList.remove('was-validated');\r\n      });\r\n  }\r\n\r\n  const handleChangeUpdateField = (index, target) => (e) => {\r\n    let newArr = [...items];\r\n    if (target === \"portCode\") {\r\n      newArr[0].portCode = e.target.value;\r\n    }\r\n    else if (target === \"portNameThai\")\r\n      newArr[0].portNameThai = e.target.value;\r\n    else if (target === \"portNameEng\")\r\n      newArr[0].portNameEng = e.target.value;\r\n    else if (target === \"description\")\r\n      newArr[0].description = e.target.value;\r\n    else if (target === \"isActive\")\r\n      newArr[index].isActive = e.target.checked;\r\n    setItems(newArr);\r\n    console.log(newArr)\r\n  }\r\n\r\n  const onClickEditData = (index) => (e) => {\r\n    // setIsConfirmEdit(!isConfirmEdit);\r\n    let newArr = [...items];\r\n    console.log(newArr)\r\n    var portId = newArr[index].portId;\r\n    var portCode = newArr[index].portCode;\r\n    var portNameThai = newArr[index].portNameThai;\r\n    var portNameEng = newArr[index].portNameEng;\r\n    var description = newArr[index].description;\r\n    var isActive = newArr[index].isActive;\r\n    // var updateBy = 1;\r\n    var arrObj = [portId, portCode, portNameThai, portNameEng, description, isActive];\r\n    // console.log(arrObj);\r\n    editPort(arrObj[0], arrObj[1], arrObj[2], arrObj[3], arrObj[4], arrObj[5]);\r\n  }\r\n\r\n  const onClickAddCheck = () => {\r\n    var checkprot = port.find((x) => x.portCode === document.getElementById('In-portCode').value)\r\n    if (checkprot) {\r\n      console.log(11111)\r\n      console.log(checkprot)\r\n\r\n    } else {\r\n      if (getIsValidForm(\"port-needs-validation\")) {\r\n\r\n        setPrimary(!primary)\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  const toggleMulti = (type) => {\r\n    let newCollapse = collapseMulti.slice()\r\n    switch (type) {\r\n      case \"left\":\r\n        newCollapse[0] = !collapseMulti[0];\r\n        break;\r\n      case \"right\":\r\n        newCollapse[1] = !collapseMulti[1];\r\n        break;\r\n      case \"both\":\r\n        newCollapse[0] = !collapseMulti[0];\r\n        newCollapse[1] = !collapseMulti[1];\r\n        break;\r\n      default:\r\n    }\r\n    setCollapseMulti(newCollapse)\r\n  }\r\n  const toggle = (e) => {\r\n    setCollapse(!collapse)\r\n    e.preventDefault()\r\n  }\r\n\r\n  const collaps = () => {\r\n    return (\r\n      <CCollapse show={collapse}>\r\n        <Box className='border-set' component={Grid} item boxShadow={1} xs={{\r\n          width: ' 100%'\r\n        }}>\r\n          <CCard className='p-3'>\r\n            <CForm className=\"port-needs-validation\" novalidate>\r\n              <CRow>\r\n                <CCol xs=\"12\" sm=\"6\" md=\"2\">\r\n                  <CFormGroup>\r\n                    <CLabel>รหัสท่าเรือ</CLabel>\r\n                    <Box className='border-set' component={Grid} item boxShadow={1} xs={{\r\n                      width: ' 100%'\r\n                    }}>\r\n                      <CInput\r\n                        id=\"In-portCode\"\r\n                        maxLength=\"5\"\r\n                        // class=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"nf-email\"\r\n                        value={portCode}\r\n                        onChange={(event) => {\r\n                          setPortCode(event.target.value);\r\n                        }}\r\n                        required />\r\n                    </Box>\r\n                    <CInvalidFeedback>กรอกข้อมูลให้ครบถ้วน</CInvalidFeedback>\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" sm=\"6\" md=\"2\">\r\n                  <CFormGroup >\r\n                    <CLabel >ชื่อท่าเรือ(อังกฤษ)</CLabel>\r\n                    <Box className='border-set' component={Grid} item boxShadow={1} xs={{\r\n                      width: ' 100%'\r\n                    }}>\r\n                      <CInput\r\n                        type=\"text\"\r\n                        // class=\"form-control\"\r\n                        name=\"nf-email\"\r\n                        value={portNameEng}\r\n                        onChange={(event) => {\r\n                          setPortNameEng(event.target.value);\r\n                        }}\r\n                        required />\r\n                    </Box>\r\n                    <CInvalidFeedback>กรอกข้อมูลให้ครบถ้วน</CInvalidFeedback>\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" sm=\"6\" md=\"2\">\r\n                  <CFormGroup>\r\n                    <CLabel >ชื่อท่าเรือ(ไทย)</CLabel>\r\n                    <Box className='border-set' component={Grid} item boxShadow={1} xs={{\r\n                      width: ' 100%'\r\n                    }}>\r\n                      <CInput\r\n                        type=\"text\"\r\n                        // class=\"form-control\"\r\n                        name=\"nf-email\"\r\n                        value={portNameThai}\r\n                        onChange={(event) => {\r\n                          setPortNameThai(event.target.value);\r\n                        }}\r\n                        required />\r\n                    </Box>\r\n                    <CInvalidFeedback>กรอกข้อมูลให้ครบถ้วน</CInvalidFeedback>\r\n                    {/* <CFormText className=\"help-block\">Please enter your email</CFormText> */}\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" sm=\"6\" md=\"2\">\r\n                  <CFormGroup>\r\n                    <CLabel >รายละเอียด</CLabel>\r\n                    <Box className='border-set' component={Grid} item boxShadow={1} xs={{\r\n                      width: ' 100%'\r\n                    }}>\r\n                      <CInput\r\n                        type=\"text\"\r\n                        // class=\"form-control\"\r\n                        name=\"nf-email\"\r\n                        value={description}\r\n                        onChange={(event) => {\r\n                          setDesc(event.target.value);\r\n                        }}\r\n                        required />\r\n                    </Box>\r\n                    <CInvalidFeedback>กรอกข้อมูลให้ครบถ้วน</CInvalidFeedback>\r\n                    {/* <CFormText className=\"help-block\">Please enter your email</CFormText> */}\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" sm=\"6\" md=\"2\">\r\n                  <CFormGroup>\r\n                    <CLabel className='mt-1' class=\"align-top\">\r\n                      &nbsp; สถานะ\r\n                    </CLabel>\r\n                    &nbsp;\r\n                    <CSwitch className={'mx-1'} variant={'3d'} color={'success'} onChange={handleChange} value={isActive} defaultChecked={false} labelOn={'\\u2713'} labelOff={'\\u2715'} />\r\n\r\n                  </CFormGroup>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow className='justify-content-center mt-2'>\r\n\r\n                <CCol xs=\"12\" sm=\"6\" md=\"2\">\r\n                  <Box className='border-set' component={Grid} item boxShadow={1} xs={{\r\n                    width: ' 100%'\r\n                  }}>\r\n                    <CButton\r\n                      className=\"editbutton\"\r\n                      size={Constant.btAddSize}\r\n                      color=\"success\"\r\n                      onClick={onClickAddCheck}\r\n                      block\r\n\r\n                    >\r\n                      บันทึก\r\n                    </CButton>\r\n                  </Box>\r\n                </CCol>\r\n                <CCol xs=\"12\" sm=\"6\" md=\"2\">\r\n                  <Box className='border-set' component={Grid} item boxShadow={1} xs={{\r\n                    width: ' 100%'\r\n                  }}>\r\n                    <CButton\r\n                      className=\"editbutton\"\r\n                      size={Constant.btAddSize}\r\n                      color=\"danger\"\r\n                      onClick={toggle}\r\n                      block\r\n                    >\r\n                      ยกเลิก\r\n                    </CButton>\r\n                  </Box>\r\n                </CCol>\r\n\r\n              </CRow>\r\n\r\n              <CModal\r\n                show={primary}\r\n                onClose={() => setPrimary(!primary)}\r\n                color=\"success\"\r\n              >\r\n                <CModalHeader closeButton>\r\n                  <h5>\r\n                    <CModalTitle>ตรวจสอบข้อมูล</CModalTitle>\r\n                  </h5>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                  คุณต้องการจะเพิ่มข้อมูลใช่หรือไม่?\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                  <CButton\r\n                    color=\"success\"\r\n                    onClick={insertPort(\r\n                      portCode,\r\n                      portNameThai,\r\n                      portNameEng,\r\n                      description,\r\n                      isActive\r\n                    )}\r\n                  >\r\n                    ยืนยัน\r\n                  </CButton>{\" \"}\r\n                  <CButton\r\n                    color=\"secondary\"\r\n                    onClick={() => setPrimary(!primary)}\r\n                  >\r\n                    ยกเลิก\r\n                  </CButton>\r\n                </CModalFooter>\r\n              </CModal>\r\n            </CForm>\r\n          </CCard>\r\n        </Box>\r\n      </CCollapse>\r\n\r\n    )\r\n  }\r\n\r\n  const maintable = () => {\r\n    return (\r\n      <CDataTable\r\n        columnFilter\r\n        tableFilter={{ label: \"ค้นหา\", placeholder: \"ค้นหาข้อมูล...\" }}\r\n        itemsPerPageSelect={{ label: \"จำนวนหน้า\" }}\r\n        items={port}\r\n        fields={fields}\r\n        // hover\r\n        striped\r\n        bordered\r\n        size=\"sm\"\r\n        itemsPerPage={10}\r\n        pagination\r\n        scopedSlots={{\r\n          isActive: (item, index) => {\r\n            return (\r\n              <td className=\"py-2 text-center\">\r\n                {item.isActive ? (\r\n                  <CIcon name=\"cil-check-circle\" style={{ color: 'green' }} size=\"2xl\" />\r\n                ) : (\r\n                  <CIcon name=\"cil-x-circle\" style={{ color: 'red' }} size=\"2xl\" />\r\n                )}\r\n              </td>\r\n            );\r\n          },\r\n          show_details: (item, index) => {\r\n            return (\r\n              <td className=\"py-2\">\r\n                <Box className='border-set' component={Grid} item boxShadow={1} xs={{\r\n                  width: ' 100%'\r\n                }}>\r\n                  <CButton\r\n                    color=\"primary\"\r\n                    variant=\"outline\"\r\n                    block\r\n                    size=\"sm\"\r\n                    onClick={() => {\r\n                      toggleDetails(index, item.portId);\r\n                    }}\r\n                  >\r\n                    {details.includes(index) ? \"ซ่อน\" : \"แสดง\"}\r\n                  </CButton>\r\n                </Box>\r\n              </td>\r\n            );\r\n          },\r\n          details: (item, index) => {\r\n            if (details.includes(index)) {\r\n              if (!items.length) {\r\n                return (\r\n                  <CCardBody>\r\n                    {/* <CProgress sm animated value={100} className=\"mb-3\" color='danger' /> */}\r\n                    {showLoadingData()}\r\n                  </CCardBody>\r\n                )\r\n              } else if (items.length) {\r\n                return (\r\n                  <CCollapse show={details.includes(index)}>\r\n                    <CCardBody>\r\n                      <CRow>\r\n                        <CLabel htmlFor=\"nf-email\">\r\n                          {items[0].portId} : &nbsp;\r\n                        </CLabel>\r\n\r\n                        <CCol xs=\"12\" sm=\"6\" md=\"2\">\r\n                          <CForm action=\"\" method=\"post\">\r\n                            <CFormGroup>\r\n                              <CLabel htmlFor=\"nf-email\">\r\n                                รหัสท่าเรือ\r\n                              </CLabel>\r\n                              <Box className='border-set' component={Grid} item boxShadow={1} xs={{\r\n                                width: ' 100%'\r\n                              }}>\r\n                                <CInput\r\n                                  type=\"text\"\r\n                                  id=\"nf-email\"\r\n                                  name=\"nf-email\"\r\n                                  value={items[0].portCode}\r\n                                  onChange={handleChangeUpdateField(0, 'portCode')}\r\n                                  placeholder={items[0].portCode}\r\n                                  autoComplete=\"email\"\r\n                                />\r\n                              </Box>\r\n                              {/* <CFormText className=\"help-block\">Please enter your email</CFormText> */}\r\n                            </CFormGroup>\r\n                          </CForm>\r\n                        </CCol>\r\n\r\n                        <CCol xs=\"12\" sm=\"6\" md=\"2\">\r\n                          <CForm action=\"\" method=\"post\">\r\n                            <CFormGroup>\r\n                              <CLabel htmlFor=\"nf-email\">\r\n                                ชื่อท่าเรือ(ไทย)\r\n                              </CLabel>\r\n                              <Box className='border-set' component={Grid} item boxShadow={1} xs={{\r\n                                width: ' 100%'\r\n                              }}>\r\n                                <CInput\r\n                                  type=\"text\"\r\n                                  id=\"nf-email\"\r\n                                  name=\"nf-email\"\r\n                                  value={items[0].portNameThai}\r\n                                  onChange={handleChangeUpdateField(0, 'portNameThai')}\r\n                                  placeholder={items[0].portNameThai}\r\n                                  autoComplete=\"email\"\r\n                                />\r\n                              </Box>\r\n                              {/* <CFormText className=\"help-block\">Please enter your email</CFormText> */}\r\n                            </CFormGroup>\r\n                          </CForm>\r\n                        </CCol>\r\n\r\n                        <CCol xs=\"12\" sm=\"6\" md=\"2\">\r\n                          <CForm action=\"\" method=\"post\">\r\n                            <CFormGroup>\r\n                              <CLabel htmlFor=\"nf-email\">\r\n                                ชื่อท่าเรือ(อังกฤษ)\r\n                              </CLabel>\r\n                              <Box className='border-set' component={Grid} item boxShadow={1} xs={{\r\n                                width: ' 100%'\r\n                              }}>\r\n                                <CInput\r\n                                  type=\"text\"\r\n                                  id=\"nf-email\"\r\n                                  name=\"nf-email\"\r\n                                  value={items[0].portNameEng}\r\n                                  onChange={handleChangeUpdateField(0, 'portNameEng')}\r\n                                  placeholder={items[0].portNameEng}\r\n                                  autoComplete=\"email\"\r\n                                />\r\n                              </Box>\r\n                              {/* <CFormText className=\"help-block\">Please enter your email</CFormText> */}\r\n                            </CFormGroup>\r\n                          </CForm>\r\n                        </CCol>\r\n\r\n                        <CCol xs=\"12\" sm=\"6\" md=\"2\">\r\n                          <CForm action=\"\" method=\"post\">\r\n                            <CFormGroup>\r\n                              <CLabel htmlFor=\"nf-email\">\r\n                                Discription\r\n                              </CLabel>\r\n                              <Box className='border-set' component={Grid} item boxShadow={1} xs={{\r\n                                width: ' 100%'\r\n                              }}>\r\n                                <CInput\r\n                                  type=\"text\"\r\n                                  id=\"nf-email\"\r\n                                  name=\"nf-email\"\r\n                                  value={items[0].description}\r\n                                  onChange={handleChangeUpdateField(0, 'description')}\r\n                                  placeholder={items[0].description}\r\n                                  autoComplete=\"email\"\r\n                                />\r\n                              </Box>\r\n                              {/* <CFormText className=\"help-block\">Please enter your email</CFormText> */}\r\n                            </CFormGroup>\r\n                          </CForm>\r\n                        </CCol>\r\n\r\n                        <CCol xs=\"12\" sm=\"6\" md=\"2\">\r\n                          <CForm action=\"\" method=\"post\">\r\n                            <CFormGroup>\r\n                              <CLabel className='mt-1' class=\"align-top\">\r\n                                &nbsp; สถานะ\r\n                              </CLabel>\r\n                              &nbsp;\r\n                              <CSwitch className={'mx-1'} variant={'3d'} color={'success'} onChange={handleChangeUpdateField(0, 'isActive')} checked={items[0].isActive} labelOn={'\\u2713'} labelOff={'\\u2715'} />\r\n                            </CFormGroup>\r\n                          </CForm>\r\n                        </CCol>\r\n\r\n                      </CRow>\r\n                      <CRow className='justify-content-center mt-2 '>\r\n                        <CCol xs=\"12\" sm=\"6\" md=\"2\">\r\n                          <Box className='border-set' component={Grid} item boxShadow={1} xs={{\r\n                            width: ' 100%'\r\n                          }}>\r\n                            <CButton\r\n                              className=\"editbutton\"\r\n                              size=\"sm\"\r\n                              color=\"primary\"\r\n                              onClick={() => setPrimary(!primary)}\r\n                              block\r\n                            >\r\n                              แก้ไขข้อมูล\r\n                            </CButton>\r\n                          </Box>\r\n                        </CCol>\r\n\r\n                        <CCol xs=\"12\" sm=\"6\" md=\"2\">\r\n                          <Box className='border-set' component={Grid} item boxShadow={1} xs={{\r\n                            width: ' 100%'\r\n                          }}>\r\n                            <CButton\r\n                              className=\"editbutton\"\r\n                              size=\"sm\"\r\n                              color=\"danger\"\r\n                              onClick={() => setDanger(!danger)}\r\n                              block\r\n                            >\r\n                              ลบข้อมูล\r\n                            </CButton>\r\n                          </Box>\r\n                        </CCol>\r\n                      </CRow>\r\n\r\n                      <CModal\r\n                        show={primary}\r\n                        onClose={() => setPrimary(!primary)}\r\n                        color=\"success\"\r\n                      >\r\n                        <CModalHeader closeButton>\r\n                          <h5>\r\n                            <CModalTitle>ตรวจสอบข้อมูล</CModalTitle>\r\n                          </h5>\r\n                        </CModalHeader>\r\n                        <CModalBody>\r\n                          คุณต้องการจะแก้ไขข้อมูลใช่หรือไม่?\r\n                        </CModalBody>\r\n                        <CModalFooter>\r\n                          <CButton\r\n                            color=\"success\"\r\n                            onClick={onClickEditData(\r\n                              0\r\n                            )}\r\n                          >\r\n                            ยืนยัน\r\n                          </CButton>{\" \"}\r\n                          <CButton\r\n                            color=\"secondary\"\r\n                            onClick={() => setPrimary(!primary)}\r\n                          >\r\n                            ยกเลิก\r\n                          </CButton>\r\n                        </CModalFooter>\r\n                      </CModal>\r\n                      <CModal\r\n                        show={danger}\r\n                        onClose={() => setDanger(!danger)}\r\n                        color=\"danger\"\r\n                      >\r\n                        <CModalHeader closeButton>\r\n                          <CModalTitle>ตรวจสอบข้อมูล</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalBody>\r\n                          คุณต้องการจะลบข้อมูลใช่หรือไม่?\r\n                        </CModalBody>\r\n                        <CModalFooter>\r\n                          <CButton\r\n                            color=\"danger\"\r\n                            onClick={deletePort(item.portId)}\r\n                          >\r\n                            ยืนยัน\r\n                          </CButton>{\" \"}\r\n                          <CButton\r\n                            color=\"secondary\"\r\n                            onClick={() => setDanger(!danger)}\r\n                          >\r\n                            ยกเลิก\r\n                          </CButton>\r\n                        </CModalFooter>\r\n                      </CModal>\r\n                    </CCardBody>\r\n                  </CCollapse>\r\n                );\r\n\r\n              }\r\n            }\r\n\r\n          },\r\n        }}\r\n      />\r\n    )\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setisActive(event.target.checked)\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  const insertPort = (portCode, portNameThai, portNameEng, description, isActive) => (e) => {\r\n    Repository.fetchAddPortList(portCode, portNameThai, portNameEng, description, isActive)\r\n      .then(\r\n        (result) => {\r\n          if (result.httpCode === \"200\")\r\n            window.location.reload(false);\r\n          else\r\n            console.log(result);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      )\r\n    setPrimary(!primary);\r\n    window.location.reload();\r\n  }\r\n\r\n\r\n  const editPort = (portId, portCode, portNameThai, portNameEng, description, isActive) => {\r\n    Repository.fetchEditPortList(portId, portCode, portNameThai, portNameEng, description, isActive)\r\n      .then(\r\n        (result) => {\r\n          if (result.httpCode === \"200\")\r\n            window.location.reload(false);\r\n          else\r\n            console.log(result);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      )\r\n    setPrimary(!primary);\r\n    window.location.reload();\r\n  }\r\n\r\n  const deletePort = (portId) => (e) => {\r\n    Repository.fetchDeletePortList(portId)\r\n      .then(\r\n        (result) => {\r\n          if (result.httpCode === \"200\")\r\n            window.location.reload(false);\r\n          else\r\n            console.log(result);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      )\r\n    setDanger(!danger);\r\n    window.location.reload();\r\n  }\r\n\r\n  const fnGetPortList = () => {\r\n    console.log('88888');\r\n    Repository.fetchPortList()\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true);\r\n          if (result.httpCode === \"200\") {\r\n            setPortList(result.data);\r\n          }\r\n          else {\r\n            setError(result);\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n  }\r\n  const showLoadingData = () => (\r\n    <CCol className=\"text-center\">\r\n      <CLabel>\r\n        {Constant.apiLoadingData}\r\n      </CLabel>\r\n      {\" \"}\r\n      <CSpinner variant=\"grow\" size=\"md\" />\r\n    </CCol>\r\n  )\r\n\r\n  const fnCheckUserAuth = () => {\r\n    var result = functionController.getUserAuthenOneRole(pageCode);\r\n    if (result.isAuth) {\r\n      // initeState();\r\n    }\r\n    else {\r\n      setIsLoaded(true);\r\n      setError(Constant.apiMessageUnAuthenToUsePage);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    fnGetPortList();\r\n\r\n  }, []);\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"content-wrapper\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            Fetch Error : {error.message}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (!isLoaded) {\r\n    return (\r\n      <div className=\"content-wrapper\">\r\n        {showLoadingData()}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <h6>\r\n          <CRow>\r\n            <CCol>\r\n              <CCard>\r\n                <CCardHeader>\r\n                  <CRow>\r\n                    <CCol>\r\n                      <h3 className=\"headertable\">ท่าเรือ</h3>\r\n                    </CCol>\r\n                    <CCol xs=\"4\" sm=\"6\" md=\"2\">\r\n                      <Box className='border-set' component={Grid} item boxShadow={1} xs={{\r\n                        width: ' 100%'\r\n                      }}>\r\n                        <CButton size={Constant.btHeaderSize} block className='btn-mainsmp' onClick={toggle}>\r\n                          {Constant.btAddData}\r\n                        </CButton>\r\n                      </Box>\r\n                    </CCol>\r\n                  </CRow>\r\n                  {collaps()}\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                  {/* <CRow xs='6' className=\"justify-content-center \"> */}\r\n                  <CCard className=\"p-2\">\r\n                    {maintable()}\r\n                  </CCard>\r\n                  {/* </CRow> */}\r\n\r\n                </CCardBody>\r\n              </CCard>\r\n            </CCol>\r\n          </CRow>\r\n        </h6>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default District\r\n"],"sourceRoot":""}