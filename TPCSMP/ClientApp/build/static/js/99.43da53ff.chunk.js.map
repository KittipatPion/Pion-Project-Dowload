{"version":3,"sources":["components/master/authentication/UserGroup.js"],"names":["fields","key","label","Constant","arrFieldMasterUserGroup","_style","width","sorter","filter","UserGroup","useState","error","setError","isLoaded","setIsLoaded","errorAPI","setErrorAPI","isLoadingData","setIsLoadingData","isPostingData","setIsPostingData","baseItems","setBaseItems","items","setItems","details","setDetails","isShowAddForm","setIsShowAddForm","isConfirmSave","setIsConfirmSave","isConfirmEdit","setIsConfirmEdit","isConfirmDelete","setIsConfirmDelete","fieldDelete","setFieldDelete","handleChangeUpdateField","type","e","newObj","userGroupCode","target","value","userGroupName","userGroupDescription","isActive","onClickAddData","document","getElementById","fnInsertData","onClickEditData","userGroupId","fnUpdateData","onClickDeleteData","fnDeleteData","arrData","Repository","fetchAddUserGroupList","then","result","httpCode","window","location","reload","fetchEditUserGroupList","index","fetchRemoveUserGroupList","fnGetDataForEdit","fetchGetUserGroupListById","data","useEffect","fetchGetUserGroupList","FunctionController","setEmptyValueInArray","getIsValidForm","formClassName","forms","querySelectorAll","isValid","Array","prototype","slice","call","forEach","form","checkValidity","classList","add","onClickCheckFormAddData","onClickCheckFormEditData","showLoadingData","className","apiLoadingData","variant","size","collapseEditForm","show","includes","dataEditForm","Object","keys","length","noValidate","xs","sm","md","component","Grid","item","boxShadow","style","height","styleHeightField","onChange","maxLength","required","inValidNullMessage","class","onClick","txtFormisActive","color","checked","labelOn","labelOff","btAddSize","block","btEditData","btDeleteData","apiTopicFetchError","message","lg","txtMasterUserGroup","btHeaderSize","btAddData","id","btSave","maxHeight","overflowY","tableFilter","tabletxtSearch","placeholder","tabletxtPlaceholder","itemsPerPageSelect","tabletxtCountPage","itemsPerPage","bordered","responsive","pagination","scopedSlots","name","manage","shape","keyId","position","indexOf","newDetails","splice","toggleDetails","btCollapseHide","btCollapseShow","centered","closeOnBackdrop","messageDescription","btOK","onClose","closeButton","titleConfirmChangeData","contentConfirmAddData","btCancel","contentConfirmEditData","contentConfirmDeleteData"],"mappings":"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","file":"static/js/99.43da53ff.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CCollapse,\r\n  CInput,\r\n  CLabel,\r\n  CForm,\r\n  CFormGroup,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n  CInvalidFeedback,\r\n  CBadge,\r\n  CInputCheckbox,\r\n  CSwitch,\r\n  CSpinner,\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport Repository from \"../../../repositories/Repository\";\r\nimport Constant from \"../../../helpers/Constant\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FunctionController from \"../../../helpers/FunctionController\";\r\n\r\nconst fields = [\r\n  {\r\n    key: \"userGroupCode\",\r\n    label: `${Constant.arrFieldMasterUserGroup[0]}`,\r\n  },\r\n  {\r\n    key: \"userGroupName\",\r\n    label: `${Constant.arrFieldMasterUserGroup[1]}`,\r\n  },\r\n  {\r\n    key: \"userGroupDescription\",\r\n    label: `${Constant.arrFieldMasterUserGroup[2]}`,\r\n  },\r\n  {\r\n    key: \"isActive\",\r\n    label: `${Constant.arrFieldMasterUserGroup[3]}`,\r\n  },\r\n  {\r\n    key: \"manage\",\r\n    label: \"\",\r\n    _style: { width: \"1%\" },\r\n    sorter: false,\r\n    filter: false,\r\n  },\r\n];\r\n\r\nexport default function UserGroup() {\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [errorAPI, setErrorAPI] = useState(false);\r\n  const [isLoadingData, setIsLoadingData] = useState(false);\r\n  const [isPostingData, setIsPostingData] = useState(false);\r\n  const [baseItems, setBaseItems] = useState([]);\r\n  const [items, setItems] = useState({});\r\n  const [details, setDetails] = useState([]);\r\n  const [isShowAddForm, setIsShowAddForm] = useState(false);\r\n  const [isConfirmSave, setIsConfirmSave] = useState(false);\r\n  const [isConfirmEdit, setIsConfirmEdit] = useState(false);\r\n  const [isConfirmDelete, setIsConfirmDelete] = useState(false);\r\n  const [fieldDelete, setFieldDelete] = useState(null);\r\n\r\n  const pageCode = \"\";\r\n\r\n\r\n  const toggleDetails = (index, keyId) => {\r\n    const position = details.indexOf(index);\r\n    let newDetails = details.slice();\r\n    if (position !== -1) {\r\n      // Close Collapse\r\n      newDetails.splice(position, 1);\r\n    } else {\r\n      // Open Collapse\r\n      newDetails = [details, index];\r\n      if (!isLoadingData) {\r\n        fnGetDataForEdit(keyId);\r\n      }\r\n    }\r\n    setDetails(newDetails);\r\n  };\r\n\r\n  const handleChangeAddForm = () => {\r\n    setIsShowAddForm(!isShowAddForm);\r\n  };\r\n\r\n  const handleChangeConfirmDelete = (index) => (e) => {\r\n    setIsConfirmDelete(!isConfirmDelete);\r\n    setFieldDelete(index);\r\n  };\r\n\r\n  const handleChangeUpdateField = (type) => (e) => {\r\n    let newObj = { ...items };\r\n    if (type === \"userGroupCode\") newObj.userGroupCode = e.target.value;\r\n    else if (type === \"userGroupName\") newObj.userGroupName = e.target.value;\r\n    else if (type === \"userGroupDescription\")\r\n      newObj.userGroupDescription = e.target.value;\r\n    else if (type === \"isActive\") {\r\n      newObj.isActive = !newObj.isActive;\r\n    }\r\n    setItems(newObj);\r\n  };\r\n\r\n  const onClickAddData = () => {\r\n    setIsConfirmSave(!isConfirmSave);\r\n    var userGroupCode = document.getElementById(\"add-userGroup-code\").value;\r\n    var userGroupName = document.getElementById(\"add-userGroup-name\").value;\r\n    var userGroupDescription =\r\n      document.getElementById(\"add-userGroup-desc\").value;\r\n    var isActive = true;\r\n    var createBy = 1;\r\n    var newArr = [\r\n      userGroupCode,\r\n      userGroupName,\r\n      userGroupDescription,\r\n      isActive,\r\n      createBy,\r\n    ];\r\n    // console.log(newArr);\r\n    fnInsertData(newArr);\r\n  };\r\n\r\n  const onClickEditData = () => {\r\n    setIsConfirmEdit(!isConfirmEdit);\r\n    var newObj = { ...items };\r\n    var userGroupId = newObj.userGroupId;\r\n    var userGroupCode = newObj.userGroupCode;\r\n    var userGroupName = newObj.userGroupName;\r\n    var userGroupDescription = newObj.userGroupDescription;\r\n    var isActive = newObj.isActive;\r\n    var updateBy = 1;\r\n    var newArr = [\r\n      userGroupId,\r\n      userGroupCode,\r\n      userGroupName,\r\n      userGroupDescription,\r\n      isActive,\r\n      updateBy,\r\n    ];\r\n    // console.log(newArr);\r\n    fnUpdateData(newArr);\r\n  };\r\n\r\n  const onClickDeleteData = () => {\r\n    setIsConfirmDelete(!isConfirmDelete);\r\n    var userGroupId = fieldDelete;\r\n    // console.log(zoneId);\r\n    fnDeleteData(userGroupId);\r\n  };\r\n\r\n  const fnInsertData = (arrData) => {\r\n    setIsPostingData(true);\r\n    Repository.fetchAddUserGroupList(arrData).then(\r\n      (result) => {\r\n        setIsPostingData(false);\r\n        if (result.httpCode === \"200\") window.location.reload(false);\r\n        else setErrorAPI(result);\r\n      },\r\n      (error) => {\r\n        setIsPostingData(false);\r\n        setErrorAPI(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  const fnUpdateData = (arrData) => {\r\n    setIsPostingData(true);\r\n    Repository.fetchEditUserGroupList(arrData).then(\r\n      (result) => {\r\n        setIsPostingData(false);\r\n        if (result.httpCode === \"200\") window.location.reload(false);\r\n        else setErrorAPI(result);\r\n      },\r\n      (error) => {\r\n        setIsPostingData(false);\r\n        setErrorAPI(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  const fnDeleteData = (index) => {\r\n    setIsPostingData(true);\r\n    Repository.fetchRemoveUserGroupList(index).then(\r\n      (result) => {\r\n        setIsPostingData(false);\r\n        if (result.httpCode === \"200\") window.location.reload(false);\r\n        else setErrorAPI(result);\r\n      },\r\n      (error) => {\r\n        setIsPostingData(false);\r\n        setErrorAPI(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  const fnGetDataForEdit = (index) => {\r\n    setIsLoadingData(true);\r\n    setItems({});\r\n    Repository.fetchGetUserGroupListById(index).then(\r\n      (result) => {\r\n        setIsLoadingData(false);\r\n        if (result.httpCode === \"200\") {\r\n          setItems(result.data);\r\n        } else {\r\n          setErrorAPI(result);\r\n        }\r\n      },\r\n      (error) => {\r\n        setIsLoadingData(false);\r\n        setErrorAPI(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  const fnCheckUserAuth = () => {\r\n    var result = FunctionController.getUserAuthenOneRole(pageCode);\r\n    if (result.isAuth) {\r\n      // initeState();\r\n    }\r\n    else {\r\n      setIsLoaded(true);\r\n      setError(Constant.apiMessageUnAuthenToUsePage);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    Repository.fetchGetUserGroupList().then(\r\n      (result) => {\r\n        setIsLoaded(true);\r\n        if (result.httpCode === \"200\") {\r\n          setBaseItems(FunctionController.setEmptyValueInArray(result.data));\r\n        } else {\r\n          setError(result);\r\n        }\r\n      },\r\n      (error) => {\r\n        setIsLoaded(true);\r\n        setError(error);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const getIsValidForm = (formClassName) => {\r\n    var forms = document.querySelectorAll(`.${formClassName}`);\r\n    var isValid = false;\r\n    Array.prototype.slice.call(forms).forEach(function (form) {\r\n      if (form.checkValidity()) {\r\n        isValid = true;\r\n      }\r\n      form.classList.add(\"was-validated\");\r\n    });\r\n    return isValid;\r\n  };\r\n\r\n  const onClickCheckFormAddData = () => {\r\n    if (getIsValidForm(\"add-needs-validation\")) {\r\n      setIsConfirmSave(!isConfirmSave);\r\n    }\r\n  };\r\n\r\n  const onClickCheckFormEditData = () => {\r\n    if (getIsValidForm(\"edit-needs-validation\")) {\r\n      setIsConfirmEdit(!isConfirmEdit);\r\n    }\r\n  };\r\n  \r\n\r\n  const showLoadingData = () => (\r\n    <CCol className=\"text-center headtext\">\r\n      <CLabel>{Constant.apiLoadingData}</CLabel>{\" \"}\r\n      <CSpinner variant=\"grow\" size=\"md\" />\r\n    </CCol>\r\n  );\r\n  ///////กรอกข้อมูล///////\r\n  const collapseAddForm = () => (\r\n    <CCollapse show={isShowAddForm}>\r\n      <Box\r\n        className=\"border-set\"\r\n        component={Grid}\r\n        item\r\n        boxShadow={1}\r\n        xs={{\r\n          width: \" 100%\",\r\n        }}\r\n      >\r\n        <CCard className=\"p-3\">\r\n          <CForm className=\"add-needs-validation\" noValidate>\r\n            <CCol xs=\"12\" sm=\"6\" md=\"12\">\r\n              <CFormGroup>\r\n                <CRow>\r\n                  <CCol xs=\"12\" sm=\"6\" md=\"3\">\r\n                    <CLabel>{Constant.arrFieldMasterUserGroup[0]}</CLabel>\r\n                    <Box\r\n                      className=\"border-set\"\r\n                      component={Grid}\r\n                      item\r\n                      boxShadow={1}\r\n                      xs={{\r\n                        width: \" 100%\",\r\n                      }}\r\n                    >\r\n                      <CInput\r\n                        type=\"text\"\r\n                        style={{ height: Constant.styleHeightField }}\r\n                        id=\"add-userGroup-code\"\r\n                        maxLength=\"20\"\r\n                        required\r\n                      />\r\n                    </Box>\r\n                    <CInvalidFeedback>\r\n                      {Constant.inValidNullMessage}\r\n                    </CInvalidFeedback>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" sm=\"6\" md=\"3\">\r\n                    <CLabel>{Constant.arrFieldMasterUserGroup[1]}</CLabel>\r\n                    <Box\r\n                      className=\"border-set\"\r\n                      component={Grid}\r\n                      item\r\n                      boxShadow={1}\r\n                      xs={{\r\n                        width: \" 25%\",\r\n                      }}\r\n                    >\r\n                      <CInput\r\n                        type=\"text\"\r\n                        style={{ height: Constant.styleHeightField }}\r\n                        id=\"add-userGroup-name\"\r\n                        maxLength=\"50\"\r\n                        required\r\n                      />\r\n                    </Box>\r\n                    <CInvalidFeedback>\r\n                      {Constant.inValidNullMessage}\r\n                    </CInvalidFeedback>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" sm=\"6\" md=\"3\">\r\n                    <CLabel>{Constant.arrFieldMasterUserGroup[2]}</CLabel>\r\n                    <Box\r\n                      className=\"border-set\"\r\n                      component={Grid}\r\n                      item\r\n                      boxShadow={1}\r\n                      xs={{\r\n                        width: \" 100%\",\r\n                      }}\r\n                    >\r\n                      <CInput\r\n                        type=\"text\"\r\n                        style={{ height: Constant.styleHeightField }}\r\n                        id=\"add-userGroup-desc\"\r\n                        maxLength=\"255\"\r\n                        required\r\n                      />\r\n                    </Box>\r\n                    <CInvalidFeedback>\r\n                      {Constant.inValidNullMessage}\r\n                    </CInvalidFeedback>\r\n                  </CCol>\r\n                </CRow>\r\n              </CFormGroup>\r\n            </CCol>\r\n\r\n            <CCol xs=\"12\" sm=\"6\" md=\"2\">\r\n              <Box\r\n                className=\"border-set\"\r\n                component={Grid}\r\n                item\r\n                boxShadow={1}\r\n                xs={{\r\n                  width: \" 100%\",\r\n                }}\r\n              >\r\n                <CButton\r\n                  className=\"editbutton\"\r\n                  size={Constant.btHeaderSize}\r\n                  color=\"success\"\r\n                  block\r\n                  onClick={onClickCheckFormAddData}\r\n                >\r\n                  {Constant.btSave}\r\n                </CButton>\r\n              </Box>\r\n            </CCol>\r\n          </CForm>\r\n        </CCard>\r\n      </Box>\r\n    </CCollapse>\r\n  );\r\n\r\n  const collapseEditForm = (index) => (\r\n    <CCollapse show={details.includes(index)}>\r\n      <CCardBody>{dataEditForm()}</CCardBody>\r\n    </CCollapse>\r\n  );\r\n  ///////ตาราง/////\r\n  const dataEditForm = () => {\r\n    if (isLoadingData) {\r\n      return (\r\n        <div>\r\n          <CRow>\r\n            <CCol>\r\n              <br />\r\n              <br />\r\n            </CCol>\r\n          </CRow>\r\n          {showLoadingData()}\r\n          <CRow>\r\n            <CCol>\r\n              <br />\r\n              <br />\r\n            </CCol>\r\n          </CRow>\r\n        </div>\r\n      );\r\n    } else if (Object.keys(items).length) {\r\n      var data = { ...items };\r\n      return (\r\n        <CForm className=\"edit-needs-validation\" noValidate>\r\n          <CRow>\r\n            <CCol xs=\"12\" sm=\"6\" md=\"4\" className=\"text-left\">\r\n              <CLabel>{Constant.arrFieldMasterUserGroup[0]}</CLabel>\r\n              <Box\r\n                className=\"border-set\"\r\n                component={Grid}\r\n                item\r\n                boxShadow={1}\r\n                xs={{\r\n                  width: \" 100%\",\r\n                }}\r\n              >\r\n                <CInput\r\n                  type=\"text\"\r\n                  style={{ height: Constant.styleHeightField }}\r\n                  value={data.userGroupCode}\r\n                  onChange={handleChangeUpdateField(\"userGroupCode\")}\r\n                  maxLength=\"50\"\r\n                  required\r\n                />\r\n              </Box>\r\n              <CInvalidFeedback>{Constant.inValidNullMessage}</CInvalidFeedback>\r\n            </CCol>\r\n            <CCol xs=\"12\" sm=\"6\" md=\"4\" className=\"text-left\">\r\n              <CLabel>{Constant.arrFieldMasterUserGroup[1]}</CLabel>\r\n              <Box\r\n                className=\"border-set\"\r\n                component={Grid}\r\n                item\r\n                boxShadow={1}\r\n                xs={{\r\n                  width: \" 100%\",\r\n                }}\r\n              >\r\n                <CInput\r\n                  type=\"text\"\r\n                  style={{ height: Constant.styleHeightField }}\r\n                  value={data.userGroupName}\r\n                  onChange={handleChangeUpdateField(\"userGroupName\")}\r\n                  maxLength=\"50\"\r\n                  required\r\n                />\r\n              </Box>\r\n              <CInvalidFeedback>{Constant.inValidNullMessage}</CInvalidFeedback>\r\n            </CCol>\r\n            <CCol xs=\"12\" sm=\"6\" md=\"4\" className=\"text-left\">\r\n              <CLabel>{Constant.arrFieldMasterUserGroup[2]}</CLabel>\r\n              <Box\r\n                className=\"border-set\"\r\n                component={Grid}\r\n                item\r\n                boxShadow={1}\r\n                xs={{\r\n                  width: \" 100%\",\r\n                }}\r\n              >\r\n                <CInput\r\n                  type=\"text\"\r\n                  style={{ height: Constant.styleHeightField }}\r\n                  value={data.userGroupDescription}\r\n                  onChange={handleChangeUpdateField(\"userGroupDescription\")}\r\n                  maxLength=\"50\"\r\n                  required\r\n                />\r\n              </Box>\r\n              <CInvalidFeedback>{Constant.inValidNullMessage}</CInvalidFeedback>\r\n            </CCol>\r\n          </CRow>\r\n          <br />\r\n          <CRow class=\"d-flex justify-content-start\">\r\n            <CCol md=\"4\">\r\n              <CFormGroup>\r\n                <CLabel\r\n                  className=\"mt-1\"\r\n                  class=\"align-top\"\r\n                  variant=\"checkbox\"\r\n                  onClick={handleChangeUpdateField(\"isActive\")}\r\n                >\r\n                  &nbsp; {Constant.txtFormisActive}\r\n                </CLabel>\r\n                <CFormGroup variant=\"checkbox\" className=\"checkbox\">\r\n                  {/* <Box className='border-set' component={Grid} item boxShadow={1} xs={{\r\n                                        width: ' 100%'\r\n                                    }}>\r\n                                        <CInputCheckbox\r\n                                            checked={data.isActive}\r\n                                            onChange={handleChangeUpdateField(\"isActive\")}\r\n                                        />\r\n                                    </Box> */}\r\n                  <CSwitch\r\n                    className={\"mx-1\"}\r\n                    variant={\"3d\"}\r\n                    color={\"success\"}\r\n                    onChange={handleChangeUpdateField(\"isActive\")}\r\n                    checked={data.isActive}\r\n                    labelOn={\"\\u2713\"}\r\n                    labelOff={\"\\u2715\"}\r\n                  />\r\n                  {/* <CLabel variant=\"checkbox\" style={{ width: \"max-content\" }} onClick={handleChangeUpdateField(\"isActive\")}>{Constant.txtFormisActive}</CLabel> */}\r\n                </CFormGroup>\r\n              </CFormGroup>\r\n            </CCol>\r\n          </CRow>\r\n          <CRow className=\"justify-content-center\">\r\n            <CCol xs=\"12\" sm=\"6\" md=\"3\">\r\n              <Box\r\n                className=\"border-set\"\r\n                component={Grid}\r\n                item\r\n                boxShadow={1}\r\n                xs={{\r\n                  width: \" 100%\",\r\n                }}\r\n              >\r\n                <CButton\r\n                  className=\"editbutton\"\r\n                  size={Constant.btAddSize}\r\n                  color=\"primary\"\r\n                  block\r\n                  onClick={onClickCheckFormEditData}\r\n                >\r\n                  {Constant.btEditData}\r\n                </CButton>\r\n              </Box>\r\n            </CCol>\r\n            <CCol xs=\"12\" sm=\"6\" md=\"3\">\r\n              <Box\r\n                className=\"border-set\"\r\n                component={Grid}\r\n                item\r\n                boxShadow={1}\r\n                xs={{\r\n                  width: \" 100%\",\r\n                }}\r\n              >\r\n                <CButton\r\n                  className=\"editbutton\"\r\n                  size={Constant.btAddSize}\r\n                  color=\"danger\"\r\n                  onClick={handleChangeConfirmDelete(data.userGroupId)}\r\n                  block\r\n                >\r\n                  {Constant.btDeleteData}\r\n                </CButton>\r\n              </Box>\r\n            </CCol>\r\n          </CRow>\r\n        </CForm>\r\n      );\r\n    }\r\n  };\r\n\r\n  const allModal = () => (\r\n    <div>\r\n      {/* Start Fetch Loading Modal */}\r\n      <CModal size=\"sm\" show={isPostingData} centered closeOnBackdrop={false}>\r\n        <CModalBody>{showLoadingData()}</CModalBody>\r\n      </CModal>\r\n      {/* End Fetch Loading Modal */}\r\n\r\n      {/* Start Fetch Error Modal */}\r\n      <CModal show={errorAPI} color=\"danger\" closeOnBackdrop={false}>\r\n        <CModalHeader>\r\n          <h5>\r\n            <CLabel>{Constant.apiTopicFetchError}</CLabel>\r\n          </h5>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CLabel>\r\n            {errorAPI\r\n              ? errorAPI.message != null\r\n                ? errorAPI.message\r\n                : errorAPI.messageDescription\r\n              : \" \"}\r\n          </CLabel>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"secondary\" onClick={() => setErrorAPI(null)}>\r\n            {Constant.btOK}\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      {/* End Fetch Error Modal */}\r\n\r\n      {/* Start Add Modal */}\r\n      <CModal\r\n        show={isConfirmSave}\r\n        onClose={() => setIsConfirmSave(!isConfirmSave)}\r\n        color=\"success\"\r\n      >\r\n        <CModalHeader closeButton>\r\n          <h5>\r\n            <CModalTitle>{Constant.titleConfirmChangeData}</CModalTitle>\r\n          </h5>\r\n        </CModalHeader>\r\n        <CModalBody>{Constant.contentConfirmAddData}</CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"success\" onClick={onClickAddData}>\r\n            {Constant.btOK}\r\n          </CButton>{\" \"}\r\n          <CButton\r\n            color=\"secondary\"\r\n            onClick={() => setIsConfirmSave(!isConfirmSave)}\r\n          >\r\n            {Constant.btCancel}\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      {/* End Add Modal */}\r\n\r\n      {/* Start Edit Modal */}\r\n      <CModal\r\n        show={isConfirmEdit}\r\n        onClose={() => setIsConfirmEdit(!isConfirmEdit)}\r\n        color=\"success\"\r\n      >\r\n        <CModalHeader closeButton>\r\n          <h5>\r\n            <CModalTitle>{Constant.titleConfirmChangeData}</CModalTitle>\r\n          </h5>\r\n        </CModalHeader>\r\n        <CModalBody>{Constant.contentConfirmEditData}</CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"success\" onClick={onClickEditData}>\r\n            {Constant.btOK}\r\n          </CButton>{\" \"}\r\n          <CButton\r\n            color=\"secondary\"\r\n            onClick={() => setIsConfirmEdit(!isConfirmEdit)}\r\n          >\r\n            {Constant.btCancel}\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      {/* End Edit Modal */}\r\n\r\n      {/* Start Delete Modal */}\r\n      <CModal\r\n        show={isConfirmDelete}\r\n        onClose={() => setIsConfirmDelete(!isConfirmDelete)}\r\n        color=\"danger\"\r\n      >\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>{Constant.titleConfirmChangeData}</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>{Constant.contentConfirmDeleteData}</CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"danger\" onClick={onClickDeleteData}>\r\n            {Constant.btOK}\r\n          </CButton>{\" \"}\r\n          <CButton\r\n            color=\"secondary\"\r\n            onClick={() => setIsConfirmDelete(!isConfirmDelete)}\r\n          >\r\n            {Constant.btCancel}\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      {/* End Delete Modal */}\r\n    </div>\r\n  );\r\n\r\n  if (error) {\r\n    return (\r\n      <CCol className=\"text-center\">\r\n        {Constant.apiTopicFetchError} : {error.message}\r\n      </CCol>\r\n    );\r\n  } else if (!isLoaded) {\r\n    return showLoadingData();\r\n  } else {\r\n    return (\r\n      <CRow>\r\n        <CCol xs=\"12\" lg=\"12\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              <CRow>\r\n                <CCol>\r\n                  <h3 className=\"headertable\">{Constant.txtMasterUserGroup}</h3>\r\n                </CCol>\r\n                <CCol md=\"2\" xs=\"4\">\r\n                  <Box\r\n                    className=\"border-set\"\r\n                    component={Grid}\r\n                    item\r\n                    boxShadow={1}\r\n                    xs={{\r\n                      width: \" 100%\",\r\n                    }}\r\n                  >\r\n                    <CButton\r\n                      block\r\n                      className=\"btn-mainsmp\"\r\n                      size={Constant.btHeaderSize}\r\n                      onClick={handleChangeAddForm}\r\n                    >\r\n                      {Constant.btAddData}\r\n                    </CButton>\r\n                  </Box>\r\n                </CCol>\r\n              </CRow>\r\n              {collapseAddForm()}\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              {/* <CRow className=\"justify-content-center\"> */}\r\n              <CCard className=\"p-2\" style={{ maxHeight: \"700px\", overflowY: \"auto\" }}>\r\n                  <CCardBody>\r\n                    <CDataTable\r\n                      id=\"table-export\"\r\n                      items={baseItems}\r\n                      fields={fields}\r\n                      // columnFilter\r\n                      tableFilter={{\r\n                        label: `${Constant.tabletxtSearch}`,\r\n                        placeholder: `${Constant.tabletxtPlaceholder}`,\r\n                      }}\r\n                      itemsPerPageSelect={{\r\n                        label: `${Constant.tabletxtCountPage}`,\r\n                      }}\r\n                      itemsPerPage={10}\r\n                      // hover\r\n                      // sorter\r\n                      // size=\"lg\"\r\n                      bordered\r\n                      responsive\r\n                      pagination\r\n                      scopedSlots={{\r\n                        isActive: (data) => (\r\n                          <td className=\"py-2 text-center\">\r\n                            {data.isActive ? (\r\n                              <CIcon\r\n                                name=\"cil-check-circle\"\r\n                                style={{ color: \"green\" }}\r\n                                size=\"2xl\"\r\n                              />\r\n                            ) : (\r\n                              <CIcon\r\n                                name=\"cil-x-circle\"\r\n                                style={{ color: \"red\" }}\r\n                                size=\"2xl\"\r\n                              />\r\n                            )}\r\n                          </td>\r\n                        ),\r\n                        manage: (data, index) => (\r\n                          <td className=\"py-2\">\r\n                            <Box\r\n                              className=\"border-set\"\r\n                              component={Grid}\r\n                              item\r\n                              boxShadow={1}\r\n                              xs={{\r\n                                width: \" 100%\",\r\n                              }}\r\n                            >\r\n                              <CButton\r\n                                color=\"primary\"\r\n                                variant=\"outline\"\r\n                                shape=\"square\"\r\n                                size={Constant.btHeaderSize}\r\n                                block\r\n                                onClick={() => {\r\n                                  toggleDetails(index, data.userGroupId);\r\n                                }}\r\n                              >\r\n                                {details.includes(index)\r\n                                  ? `${Constant.btCollapseHide}`\r\n                                  : `${Constant.btCollapseShow}`}\r\n                              </CButton>\r\n                            </Box>\r\n                          </td>\r\n                        ),\r\n                        details: (data, index) => {\r\n                          return collapseEditForm(index);\r\n                        },\r\n                      }}\r\n                    />\r\n                  </CCardBody>\r\n                </CCard>\r\n              {/* </CRow> */}\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        {allModal()}\r\n      </CRow>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}